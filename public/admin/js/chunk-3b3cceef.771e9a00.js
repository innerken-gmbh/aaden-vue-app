(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-3b3cceef'], { '4c03': function (e, t, a) { 'use strict'; a('a15b'); var n = a('b85c'); var r = (a('96cf'), a('1da1')); var i = a('5530'); var o = a('f4d6'); var s = a('9d8f'); var p = a.n(s); var u = a('ebc9'); var d = a('b0d9'); var l = a('a86d'); var c = a('5089'); var m = { load: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, p.a.get('Category.php', Object(i.a)({}, t)); case 2:return e.abrupt('return', e.sent.content); case 3:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()) }; var y = { id: { type: o.IKDataEntity.Types.Integer, displayName: 'id', tableConfig: { align: 'start' }, formConfig: { requiredNew: !1 } }, _langsname: { displayName: 'labelName', form: !1 }, langs: { displayName: 'labelName', type: o.IKDataEntity.Types.Group, formConfig: { groupName: 'labelName', default: c.b.supportLang, childLabelKey: 'lang', type: {} }, tableConfig: { displayCondition: function (e) { return e.lang.toUpperCase() === c.b.getLang() }, displayChild: function (e) { return e === 'name' } }, childKey: ['name', 'desc'], labelKey: 'lang', children: [l.a, l.a, l.a], header: !1 } }; var f = o.IKDataEntity.ModelFactory(y, m); var g = a('641f'); var h = a.n(g); var b = a('c0d6'); var I = Boolean(c.b.isShowOnTable === '0'); var C = ['#FFCDD2', '#F8BBD0', '#E1BEE7', '#D1C4E9', '#C5CAE9', '#BBDEFB', '#B3E5FC', '#B2EBF2', '#B2DFDB', '#C8E6C9', '#DCEDC8', '#F0F4C3', '#FFF9C4', '#FFECB3', '#FFE0B2', '#FFCCBC', '#D7CCC8', '#CFD8DC']; var T = { add: function (e) { return e.appliedAttributeGroup = e.attributeGroupId.join(','), e.catTypeId = e.dishesCategoryTypeId, p.a.post('Category.php?op=add', Object(i.a)(Object(i.a)({}, e), {}, { langs: JSON.stringify(e.langs) }), { showLoading: !0 }) }, edit: function (e) { return e.appliedAttributeGroup = e.attributeGroupId.join(','), e.catTypeId = e.dishesCategoryTypeId, console.log('label-manage: item()', e), p.a.postWithUploadFile('Category.php?op=update', Object(i.a)(Object(i.a)({}, e), {}, { langs: JSON.stringify(e.langs) }), { showLoading: !0 }) }, remove: function (e) { return p.a.post('Category.php?op=delete', { id: e }) }, load: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { var a; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, p.a.get('Category.php', t); case 2:return a = e.sent.content, console.log(a, 'cate response'), e.abrupt('return', a); case 5:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()), randomColor: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { var a, r, o; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:h.a.showLoading(!0), a = Object(n.a)(t), e.prev = 2, a.s(); case 4:if ((r = a.n()).done) { e.next = 13; break } return o = r.value, o.appliedAttributeGroup = o.attributeGroupId.join(','), o.catTypeId = o.dishesCategoryTypeId, o.color = C[Math.round(18 * Math.random())], e.next = 11, p.a.postWithUploadFile('Category.php?op=update', Object(i.a)(Object(i.a)({}, o), {}, { langs: JSON.stringify(o.langs) }), { showLoading: !1 }); case 11:e.next = 4; break; case 13:e.next = 18; break; case 15:e.prev = 15, e.t0 = e.catch(2), a.e(e.t0); case 18:return e.prev = 18, a.f(), e.finish(18); case 21:h.a.toast('OK'); case 22:case 'end':return e.stop() } }, e, null, [[2, 15, 18, 21]]) })); function t (t) { return e.apply(this, arguments) } return t }()), removeAllColor: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { var a, r, o; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:h.a.showLoading(!0), a = Object(n.a)(t); try { for (a.s(); !(r = a.n()).done;)o = r.value, o.appliedAttributeGroup = o.attributeGroupId.join(','), o.catTypeId = o.dishesCategoryTypeId, o.color = '#FFFFFF', p.a.postWithUploadFile('Category.php?op=update', Object(i.a)(Object(i.a)({}, o), {}, { langs: JSON.stringify(o.langs) }), { showLoading: !1 }) } catch (s) { a.e(s) } finally { a.f() }h.a.toast('OK'); case 4:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()), removeCategoryImage: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, p.a.post('Category.php?op=removeCategoryImage', Object(i.a)({}, t), { showLoading: !0 }); case 2:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()) }; var v = { id: { type: o.IKDataEntity.Types.Integer, displayName: 'id', tableConfig: { align: 'start' }, formConfig: { requiredNew: !1 } }, _langsname: { displayName: 'labelName', form: !1 }, dcImage: { type: o.IKDataEntity.Types.Image, formConfig: { required: !1, type: { root: function () { return b.a.getters.rootUrl + c.b.dcImageRoot } } }, displayName: 'Label Image', header: I }, langs: { displayName: 'labelName', type: o.IKDataEntity.Types.Group, formConfig: { groupName: 'labelName', default: c.b.supportLang, childLabelKey: 'lang', type: {} }, tableConfig: { displayCondition: function (e) { return e.lang.toUpperCase() === c.b.getLang().toUpperCase() }, displayChild: function (e) { return console.log(e), e === 'name' } }, childKey: ['name', 'desc'], labelKey: 'lang', children: [l.a, l.a, l.a], header: !1 }, dishesCategoryTypeId: { displayName: 'labelType', type: o.IKDataEntity.Types.Option, formConfig: { type: { selectItems: u.a.getList } } }, attributeGroupId: { displayName: 'attributeGroupNames', type: o.IKDataEntity.Types.Option, tableConfig: { width: '100px' }, formConfig: { required: !1, type: { selectItems: d.a.getList, multiple: !0 } } }, printOrder: { type: o.IKDataEntity.Types.Integer, required: !1, formConfig: { default: 50, requiredNew: !1, requiredEdit: !1, rule: [function (e) { return /^[0-9]\d*$/.test(e) || 'Bitte geben Sie die ganze Zahl ein' }] } }, parentId: { type: o.IKDataEntity.Types.Option, formConfig: { required: !1, type: { selectItems: f.getList, itemText: '_langsname' } }, header: !1 }, categorySort: { type: o.IKDataEntity.Types.Integer, displayName: 'sectionSort', formConfig: { required: !0 } } }; t.a = o.IKDataEntity.ModelFactory(v, T) }, 6306: function (e, t, a) { 'use strict'; var n = a('5530'); var r = (a('96cf'), a('1da1')); var i = a('f4d6'); var o = a('9d8f'); var s = a.n(o); var p = { id: { type: i.IKDataEntity.Types.Integer, displayName: 'id', tableConfig: { align: 'start' }, form: !1 }, name: { displayName: 'sectionName' }, isSingleLinePrint: { type: i.IKDataEntity.Types.Boolean, displayName: 'isSingleLinePrint' }, isSingleOrderPrint: { type: i.IKDataEntity.Types.Boolean, displayName: 'isSingleOrderPrint' }, upsideDown: { type: i.IKDataEntity.Types.Boolean }, printerCount: { displayName: 'printerCount', formConfig: { inEdit: !1, inNew: !1 } }, defaultRetryCount: { formConfig: { default: '0' } }, totalDishesCount: { formConfig: { inEdit: !1, inNew: !1 } } }; var u = { load: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, s.a.get('Printer.php', Object(n.a)({ op: 'showPrinterGroups' }, t)); case 2:return e.abrupt('return', e.sent.content); case 3:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()), add: function (e) { return s.a.postWithUploadFile('Printer.php?op=addPrinterGroups', e, { showLoading: !0 }) }, edit: function (e) { return s.a.postWithUploadFile('Printer.php?op=updatePrinterGroups', e, { showLoading: !0 }) }, remove: function (e) { return s.a.post('Printer.php?op=deletePrinterGroup', { id: e }) } }; t.a = i.IKDataEntity.ModelFactory(p, u) }, '6e35': function (e, t, a) { 'use strict'; var n = a('5530'); var r = (a('96cf'), a('1da1')); var i = a('f4d6'); var o = a('9d8f'); var s = a.n(o); var p = { id: { type: i.IKDataEntity.Types.Integer, displayName: 'id', tableConfig: { align: 'start' }, form: !1 }, name: { displayName: 'allergName' }, icon: { displayName: 'icon' }, shortName: { displayName: 'shortName' }, displayText: { displayName: 'displayText' } }; var u = { add: function (e) { return s.a.postWithUploadFile('Dishes.php?op=addAllergen', e, { showLoading: !0 }) }, edit: function (e) { return s.a.postWithUploadFile('Dishes.php?op=updateAllergen', e, { showLoading: !0 }) }, remove: function (e) { return s.a.post('Dishes.php?op=deleteAllergen', { id: e }) }, load: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, s.a.get('Dishes.php', Object(n.a)({ op: 'showAllAllergen' }, t)); case 2:return e.abrupt('return', e.sent.content); case 3:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()) }; t.a = i.IKDataEntity.ModelFactory(p, u) }, '6f56': function (e, t, a) { 'use strict'; a('4160'), a('b0c0'), a('07ac'), a('159b'); var n = a('5530'); var r = (a('96cf'), a('1da1')); var i = a('f4d6'); var o = a('9d8f'); var s = a.n(o); var p = a('5089'); var u = a('a86d'); var d = { id: { type: i.IKDataEntity.Types.Integer, displayName: 'id', tableConfig: { align: 'start' }, formConfig: { requiredNew: !1 } }, langs: { displayName: 'name', type: i.IKDataEntity.Types.Group, formConfig: { groupName: 'name', default: p.b.supportLang, childLabelKey: 'lang', type: {} }, tableConfig: { displayCondition: function (e) { return e.lang.toUpperCase() === p.b.getLang() }, displayChild: function (e) { return e === 'name' } }, childKey: ['name', 'desc'], labelKey: 'lang', children: [u.a, u.a, u.a], header: !1 }, name: { displayName: 'shownName', form: !1 }, printName: { displayName: 'printTitle' }, zbonGroup: { displayName: 'zbonGroup' }, color: { type: i.IKDataEntity.Types.Color, formConfig: { required: !1 } } }; var l = { load: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { var a; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, s.a.get('Complex.php', Object(n.a)({ op: 'showAllConsumeTypeInfo', lang: p.b.getLang() }, t)); case 2:return a = e.sent.content, console.log(a, 'response'), a.forEach(function (e) { e.langs = Object.values(e.langs) }), e.abrupt('return', a); case 6:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()), add: function (e) { return e.name = e.langs[2].name, s.a.post('ConsumeType.php?op=add', Object(n.a)(Object(n.a)({}, e), {}, { langs: JSON.stringify(e.langs) }), { showLoading: !0 }) }, edit: function (e) { return e.name = e.langs[2].name, s.a.postWithUploadFile('ConsumeType.php?op=update', Object(n.a)(Object(n.a)({}, e), {}, { langs: JSON.stringify(e.langs) }), { showLoading: !0 }) }, remove: function (e) { return s.a.post('ConsumeType.php?op=delete', { id: e }) } }; t.a = i.IKDataEntity.ModelFactory(d, l) }, a86d: function (e, t, a) { 'use strict'; var n = a('f4d6'); var r = { id: { type: n.IKDataEntity.Types.Integer, displayName: 'id', tableConfig: { align: 'start' }, formConfig: { requiredNew: !1 } }, name: { displayName: 'Name' }, lang: {}, desc: { displayName: 'Beschreibung', formConfig: { required: !1 } } }; t.a = n.IKDataEntity.ModelFactory(r, {}) }, b0d9: function (e, t, a) { 'use strict'; var n = a('5530'); var r = (a('96cf'), a('1da1')); var i = a('5089'); var o = a('f4d6'); var s = a('9d8f'); var p = a.n(s); var u = { id: { type: o.IKDataEntity.Types.Integer, displayName: 'id', tableConfig: { align: 'start' }, form: !1 }, name: {}, printTitle: {}, required: { type: o.IKDataEntity.Types.Boolean }, multiSelect: { type: o.IKDataEntity.Types.Boolean }, attrubuteCount: { type: o.IKDataEntity.Types.Integer, form: !1 } }; var d = { load: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, p.a.get('Category.php', Object(n.a)({ op: 'showAttributeGroup', lang: i.b.getLang() }, t)); case 2:return e.abrupt('return', e.sent.content); case 3:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()), add: function (e) { return p.a.postWithUploadFile('Category.php?op=addAttributeGroup', e, { showLoading: !0 }) }, edit: function (e) { return p.a.postWithUploadFile('Category.php?op=updateAttributeGroup', e, { showLoading: !0 }) }, remove: function (e) { return p.a.post('Category.php?op=deleteAttributeGroup', { id: e }) } }; t.a = o.IKDataEntity.ModelFactory(u, d) }, c41c7: function (e, t, a) { 'use strict'; a.r(t); var n = function () { var e = this; var t = e.$createElement; var a = e._self._c || t; return a('v-container', [a('v-row', [a('v-col', [a('v-card', [a('v-card-title', [e._v(' ' + e._s(e.$t('请选择自助餐类型')) + ' ')]), a('v-card-text', [a('v-select', { attrs: { items: e.consumeTypes, 'item-text': 'name', 'item-value': 'id', label: e.$t('自助餐类型') }, model: { value: e.activeConsumeTypeIndex, callback: function (t) { e.activeConsumeTypeIndex = t }, expression: 'activeConsumeTypeIndex' } })], 1), e.activeConsumeTypeIndex ? [a('div', { staticClass: 'flex justify-space-between' }, [a('v-btn', { staticClass: 'primary mb-3 ml-4', on: { click: function (t) { e.settingDialog = !0 } } }, [e._v(' Buffet Setting ')]), a('v-btn', { attrs: { color: 'red mb-3 ml-4' }, on: { click: e.resetTime } }, [e._v(' ' + e._s(e.$t('重置全部自助餐时间')) + ' ')])], 1), a('v-dialog', { attrs: { 'max-width': '500' }, model: { value: e.settingDialog, callback: function (t) { e.settingDialog = t }, expression: 'settingDialog' } }, [a('v-card', { attrs: { 'max-width': '500' } }, [a('v-card-title', [e._v(' ' + e._s(e.$t('自助餐')) + ' '), a('v-spacer')], 1), a('v-card-text', [a('v-row', [a('v-col', [a('v-text-field', { attrs: { 'hide-details': '', label: e.$t('轮数') }, model: { value: e.setting.totalRound, callback: function (t) { e.$set(e.setting, 'totalRound', t) }, expression: 'setting.totalRound' } })], 1), a('v-col', [a('v-text-field', { attrs: { 'hide-details': '', label: e.$t('每轮时间') }, model: { value: e.setting.roundTime, callback: function (t) { e.$set(e.setting, 'roundTime', t) }, expression: 'setting.roundTime' } })], 1)], 1), a('v-row', [a('v-col', [a('v-text-field', { attrs: { 'hide-details': '', label: e.$t('总用餐时间') }, model: { value: e.setting.maxDineTime, callback: function (t) { e.$set(e.setting, 'maxDineTime', t) }, expression: 'setting.maxDineTime' } })], 1), a('v-col', [a('v-text-field', { attrs: { 'hide-details': '', label: e.$t('儿童每轮数量') }, model: { value: e.setting.childRoundDishCount, callback: function (t) { e.$set(e.setting, 'childRoundDishCount', t) }, expression: 'setting.childRoundDishCount' } })], 1)], 1), a('v-row', [a('v-col', [a('v-btn', { attrs: { color: 'primary', block: '' } }, [e._v(' ' + e._s(e.$t('更新')) + ' ')])], 1)], 1)], 1)], 1)], 1)] : e._e()], 2)], 1)], 1), e.activeConsumeTypeIndex ? [a('v-row', [a('v-col', { attrs: { cols: '12', lg: '6', md: '6' } }, [a('v-card', [a('ik-data-table', { attrs: { model: e.buffetPriceModel, filter: e.filter, 'entity-name': e.$t('自助价格菜品'), icon: 'mdi-account-child', 'use-edit-action': !1 } })], 1)], 1), a('v-col', { attrs: { cols: '12', lg: '6', md: '6' } }, [a('v-card', [a('ik-data-table', { attrs: { model: e.buffetModel, filter: e.filter, 'entity-name': e.$t('时间设置'), icon: 'mdi-account-child' } })], 1)], 1)], 1), a('v-row', [a('v-col', { attrs: { cols: '12', lg: '12' } }, [a('v-card', [a('ik-data-table', { attrs: { model: e.model, filter: e.filter, 'entity-name': e.$t('自助类型设置'), icon: 'mdi-account-child', 'use-action': !1 } })], 1)], 1)], 1)] : e._e()], 2) }; var r = []; var i = a('53ca'); var o = (a('96cf'), a('1da1')); var s = (a('99af'), a('d81d'), a('d3b7'), a('3ca3'), a('ddb0'), a('2909')); var p = a('f4d6'); var u = a('9d8f'); var d = a.n(u); var l = a('c791'); var c = a('4c03'); var m = a('ebc9'); var y = { code: {}, dishId: { displayName: 'name', type: p.IKDataEntity.Types.Option, formConfig: { type: { selectItems: l.a.getList, itemText: '_langsname' } } }, dishesCategoryId: { displayName: 'category', type: p.IKDataEntity.Types.Option, formConfig: { type: { selectItems: c.a.getList, itemText: '_langsname' } } }, dishesCategoryTypeId: { displayName: 'categoryType', type: p.IKDataEntity.Types.Option, formConfig: { type: { selectItems: m.a.getList, itemText: 'name' } } }, showing: { type: p.IKDataEntity.Types.Boolean }, isFree: { type: p.IKDataEntity.Types.Boolean } }; var f = 0; var g = { edit: function (e) { var t = []; return t.push(d.a.post('Dishes.php', e, { params: { op: (e.showing ? 'enable' : 'disable') + 'SingleDishShowInConsumeType' } })), t.push(d.a.post('Dishes.php', e, { params: { op: (e.isFree ? 'enable' : 'disable') + 'SingleDishFreeInConsumeType' } })), Promise.all(t) }, load: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, d.a.get.apply(d.a, ['Dishes.php?op=showDishesShowAndFreeByConsumeType'].concat(Object(s.a)(t))); case 2:return e.abrupt('return', e.sent.content.map(function (e) { return e.id = f, f++, e })); case 3:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()) }; var h = p.IKDataEntity.ModelFactory(y, g); var b = a('6f56'); var I = a('5530'); var C = a('b85c'); var T = a('caae'); var v = a('641f'); var w = a.n(v); var D = { id: { type: p.IKDataEntity.Types.Integer, displayName: 'id', tableConfig: { align: 'start' }, header: !1, formConfig: { requiredNew: !1 } }, consumeTypeId: { displayName: 'name', type: p.IKDataEntity.Types.Option, formConfig: { type: { selectItems: b.a.getList, itemText: 'name' } } }, fromTime: { type: p.IKDataEntity.Types.Time, displayName: 'Zeit ab' }, toTime: { type: p.IKDataEntity.Types.Time, displayName: 'Zeit bis' }, dayOfWeek: { type: p.IKDataEntity.Types.Option, formConfig: { type: { selectItems: T.a.getList(), itemText: 'name', multiple: !0 } } } }; var O = { load: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, d.a.get.apply(d.a, ['ConsumeType.php?op=showConsumeTypeTimeSpanByConsumeType'].concat(Object(s.a)(t))); case 2:return e.abrupt('return', e.sent.content); case 3:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()), add: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e (t) { var a, n, r, i; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:a = t, console.log(a, 'tempItem'), n = Object(C.a)(t.dayOfWeek); try { for (n.s(); !(r = n.n()).done;)i = r.value, a.dayOfWeek = i, d.a.post('ConsumeType.php?op=addConsumeTypeTimeSpan', Object(I.a)({}, a), { showLoading: !0 }) } catch (o) { n.e(o) } finally { n.f() } case 4:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()), remove: function (e) { return d.a.post('ConsumeType.php?op=deleteConsumeTypeTimeSpan', { id: e }) }, edit: function (e) { return console.log('edit item', e), d.a.postWithUploadFile('ConsumeType.php?op=editConsumeTypeTimeSpan', e, { showLoading: !0 }) }, resetTimeSpan: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e (t) { var a, n, r; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:w.a.showLoading(!0), a = Object(C.a)(t); try { for (a.s(); !(n = a.n()).done;)r = n.value, r.fromTime = '00:00:00', r.toTime = '23:59:59', d.a.postWithUploadFile('ConsumeType.php?op=editConsumeTypeTimeSpan', r, { showLoading: !1 }) } catch (i) { a.e(i) } finally { a.f() }w.a.toast('OK'); case 4:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()) }; var N = p.IKDataEntity.ModelFactory(D, O); var x = { dishesId: { displayName: 'name', type: p.IKDataEntity.Types.Option, formConfig: { type: { selectItems: l.a.getBuffet, itemText: '_langsname' } } }, consumeTypeId: { displayName: 'consumeTypeName', type: p.IKDataEntity.Types.Option, formConfig: { disableEdit: !0, type: { selectItems: b.a.getList, itemText: 'name' } } }, isForAdult: { type: p.IKDataEntity.Types.Boolean, displayName: 'Für Erwachsene' } }; var E = { load: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, d.a.get.apply(d.a, ['ConsumeType.php?op=showBuffetPriceDishToConsumeTypeByConsumeType'].concat(Object(s.a)(t))); case 2:return e.abrupt('return', e.sent.content.map(function (e) { return e.id = e.dishesId, e })); case 3:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()), add: function (e) { return e.dishId = e.dishesId, e.isForAdult = e.isForAdult ? 1 : 0, d.a.postWithUploadFile('ConsumeType.php?op=setBuffetPriceDishToConsumeType', e, { showLoading: !0 }) }, remove: function (e) { var t = { dishId: e }; return d.a.post('ConsumeType.php?op=deleteBuffetPriceDishToConsumeType', t) } }; var K = p.IKDataEntity.ModelFactory(x, E); var j = { roundDishCount: 0, childRoundDishCount: 0, maxDineTime: 0, roundTime: 0, totalRound: 0 }; var L = { name: 'BuffetSetting', components: { IkDataTable: p.IkDataTable }, data: function () { return { model: h, buffetModel: N, buffetPriceModel: K, consumeTypes: [], settingDialog: !1, dishes: [], activeConsumeTypeIndex: null, setting: j } }, computed: { filter: function () { return this.activeConsumeTypeIndex ? { consumeTypeId: this.activeConsumeTypeIndex } : null } }, mounted: function () { var e = this; return Object(o.a)(regeneratorRuntime.mark(function t () { return regeneratorRuntime.wrap(function (t) { while (1) switch (t.prev = t.next) { case 0:return t.next = 2, b.a.getList(); case 2:return e.consumeTypes = t.sent, t.next = 5, l.a.getList(); case 5:e.dishes = t.sent; case 6:case 'end':return t.stop() } }, t) }))() }, methods: { resetTime: function () { return Object(o.a)(regeneratorRuntime.mark(function e () { var t; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, N.getList(); case 2:return t = e.sent, console.log('async timespan:', t, 'typeof fromTime', Object(i.a)(t[0].fromTime)), e.next = 6, N.resetTimeSpan(t); case 6:case 'end':return e.stop() } }, e) }))() } } }; var F = L; var G = a('2877'); var R = a('6544'); var k = a.n(R); var A = a('8336'); var B = a('b0af'); var S = a('99d9'); var q = a('62ad'); var P = a('a523'); var U = a('169a'); var W = a('0fd9'); var $ = a('b974'); var _ = a('2fa4'); var M = a('8654'); var J = Object(G.a)(F, n, r, !1, null, '7bf88d0c', null); t.default = J.exports; k()(J, { VBtn: A.a, VCard: B.a, VCardText: S.c, VCardTitle: S.d, VCol: q.a, VContainer: P.a, VDialog: U.a, VRow: W.a, VSelect: $.a, VSpacer: _.a, VTextField: M.a }) }, c791: function (e, t, a) { 'use strict'; a('a4d3'), a('e01a'), a('4de4'), a('0481'), a('caad'), a('a15b'), a('d81d'), a('4069'), a('b0c0'), a('ac1f'), a('2532'), a('1276'), a('96cf'); var n = a('1da1'); var r = a('5530'); var i = a('f4d6'); var o = a('9d8f'); var s = a.n(o); var p = a('5089'); var u = a('c0d6'); var d = a('4c03'); var l = a('6306'); var c = a('6e35'); var m = a('a86d'); var y = a('b0d9'); var f = a('9225'); var g = Boolean(p.b.isShowOnTable === '0'); var h = { id: { type: i.IKDataEntity.Types.Integer, displayName: 'id', form: !1 }, code: {}, image: { type: i.IKDataEntity.Types.Image, formConfig: { type: { root: function () { return u.a.getters.rootUrl + p.b.dishImageRoot } }, required: !1 }, displayName: 'image', header: g }, dishName: { displayName: 'name', form: !1 }, price: { type: i.IKDataEntity.Types.Float, formConfig: { default: '', overwriteRule: !0, rule: [function (e) { return /^[0-9]+\.{0,1}[0-9]{0,2}$/.test(e) || 'Bitte geben Sie den richtigen Preis ein' }] } }, langs: { displayName: 'name', type: i.IKDataEntity.Types.Group, formConfig: { groupName: 'name', default: p.b.supportLang, childLabelKey: 'lang', type: {} }, tableConfig: { displayCondition: function (e) { return e.lang.toLowerCase() === p.b.getLang().toLowerCase() }, displayChild: function (e) { return e === 'name' } }, childKey: ['name', 'desc'], labelKey: 'lang', children: [m.a, m.a, m.a], header: !1 }, printGroupId: { displayName: f.a.t('printCatName'), type: i.IKDataEntity.Types.Option, formConfig: { default: 1, type: { selectItems: l.a.getList } } }, extraPrintGroupIds: { displayName: f.a.t('extraPrintGroup'), type: i.IKDataEntity.Types.Option, formConfig: { type: { multiple: !0, selectItems: l.a.getList }, required: !1 }, header: !1 }, categoryId: { displayName: 'labelName', type: i.IKDataEntity.Types.Option, formConfig: { type: { selectItems: d.a.getList, itemText: '_langsname' } } }, AllergenId: { displayName: f.a.t('过敏源'), type: i.IKDataEntity.Types.Option, formConfig: { type: { selectItems: c.a.getList, multiple: !0 }, required: !1 }, header: !1 }, attributeGroupId: { displayName: f.a.t('attributeGroupNames'), type: i.IKDataEntity.Types.Option, formConfig: { merge: !1, required: !1, type: { selectItems: y.a.getList, multiple: !0, disabledItem: function (e, t) { return t.inheritAttributeGroupId ? Object(r.a)(Object(r.a)({}, e), {}, { disabled: t.inheritAttributeGroupId.includes(e.id) }) : e } } }, header: !1 }, localAttributeGroupId: { type: i.IKDataEntity.Types.Option, formConfig: { type: { selectItems: y.a.getList, multiple: !0 } }, form: !1, header: !1 }, inheritAttributeGroupId: { displayName: 'AttributeGroupName', type: i.IKDataEntity.Types.Option, formConfig: { type: { selectItems: y.a.getList, multiple: !0 } }, form: !1, header: !1 }, dishWeight: { displayName: 'DishWeight', type: i.IKDataEntity.Types.Integer, formConfig: { default: 1, required: !1, rule: [function (e) { return /^[0-9]\d*$/.test(e) || 'Bitte geben Sie die ganze Zahl ein' }] }, header: !1 }, isActive: { type: i.IKDataEntity.Types.Boolean, displayName: 'isActive', formConfig: { default: 1, required: !1 } }, dishAlias: { required: !1, formConfig: { requiredNew: !1, requiredEdit: !1 }, header: !1 }, color: { type: i.IKDataEntity.Types.Color, formConfig: { required: !1 } } }; var b = { multipleAdd: function (e) { return s.a.postWithUploadFile('Dishes.php?op=add', Object(r.a)(Object(r.a)({}, e), {}, { params: JSON.stringify(e) }), { showLoading: !1 }) }, add: function (e) { return e.attributeGroup = e.attributeGroupId.filter(function (t) { return !e.inheritAttributeGroupId.includes(t) }).join(','), e.allergenGroup = e.AllergenId.join(','), e.extraPrintGroupIds = e.extraPrintGroupIds.join(','), s.a.postWithUploadFile('Dishes.php?op=add', Object(r.a)(Object(r.a)({}, e), {}, { params: JSON.stringify(e) }), { showLoading: !0 }) }, edit: function (e) { return e.attributeGroup = e.attributeGroupId.filter(function (t) { return !e.inheritAttributeGroupId.includes(t) }).join(','), e.allergenGroup = e.AllergenId.join(','), e.extraPrintGroupIds = e.extraPrintGroupIds.join(','), e.file && (e.imageExt = e.file.name.split('.')[1]), e.isActive = e.isActive ? 1 : 0, s.a.postWithUploadFile('Dishes.php?op=update', Object(r.a)(Object(r.a)({}, e), {}, { params: JSON.stringify(e) }), { showLoading: !0 }) }, remove: function (e) { return s.a.post('Dishes.php?op=delete', { id: e }) }, load: (function () { var e = Object(n.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, s.a.get('Dishes.php', Object(r.a)({ lang: p.b.getLang(), onlyActive: 0 }, t)); case 2:return e.abrupt('return', e.sent.content.map(function (e) { return e.id = e.dishId, e.attributeGroupId = [e.inheritAttributeGroupId ? e.inheritAttributeGroupId.split(',') : [], e.localAttributeGroupId ? e.localAttributeGroupId.split(',') : []].flat().join(','), e.langs = e.langs.map(function (e) { return Object(r.a)(Object(r.a)({}, e), {}, { desc: e.description }) }), e })); case 3:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()) }; var I = i.IKDataEntity.ModelFactory(h, b); I.getBuffet = Object(n.a)(regeneratorRuntime.mark(function e () { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, I.getList(); case 2:return e.abrupt('return', e.sent.filter(function (e) { return e.dishesCategoryTypeId === '8' })); case 3:case 'end':return e.stop() } }, e) })), t.a = I }, caae: function (e, t, a) { 'use strict'; var n = a('9225'); t.a = { list: [{ id: 1, name: n.a.t('Monday') }, { id: 2, name: n.a.t('Tuesday') }, { id: 3, name: n.a.t('Wednesday') }, { id: 4, name: n.a.t('Thursday') }, { id: 5, name: n.a.t('Friday') }, { id: 6, name: n.a.t('Saturday') }, { id: 7, name: n.a.t('Sunday') }], getList: function () { return this.list } } }, ebc9: function (e, t, a) { 'use strict'; var n = a('5530'); var r = (a('96cf'), a('1da1')); var i = a('5089'); var o = a('f4d6'); var s = a('9d8f'); var p = a.n(s); var u = { id: { type: o.IKDataEntity.Types.Integer, displayName: 'id', tableConfig: { align: 'start' }, formConfig: { requiredNew: !1 } }, name: {}, lang: {} }; var d = { load: (function () { var e = Object(r.a)(regeneratorRuntime.mark(function e (t) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, p.a.get('CategoryType.php', Object(n.a)({ lang: i.b.getLang() }, t)); case 2:return e.abrupt('return', e.sent.content); case 3:case 'end':return e.stop() } }, e) })); function t (t) { return e.apply(this, arguments) } return t }()) }; t.a = o.IKDataEntity.ModelFactory(u, d) } }])
// # sourceMappingURL=chunk-3b3cceef.771e9a00.js.map
