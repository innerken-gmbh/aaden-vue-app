{"version":3,"sources":["webpack:///./src/model/Category.js","webpack:///./src/views/dishes/DCacheTable.vue?ccae","webpack:///./src/model/DCacheProperty.js","webpack:///src/views/dishes/DCacheTable.vue","webpack:///./src/views/dishes/DCacheTable.vue?9a8e","webpack:///./src/views/dishes/DCacheTable.vue","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts","webpack:///./src/model/StringEntity.js","webpack:///./src/model/AttributeGroup.js","webpack:///./src/model/CategoryType.js"],"names":["i","Boolean","GlobalSettings","isShowOnTable","colorList","entity","id","type","IKDataEntity","Types","Integer","form","table","color","Color","formConfig","required","dcImage","Image","root","store","getters","rootUrl","dcImageRoot","displayName","header","attributeGroupId","Option","tableConfig","width","selectItems","AttributeGroup","getList","multiple","_langsname","langs","Group","groupName","default","supportLang","childLabelKey","displayCondition","item","lang","toUpperCase","getLang","displayChild","key","console","log","childKey","labelKey","children","StringEntity","dishesCategoryTypeId","CategoryType","printOrder","requiredNew","requiredEdit","rule","v","test","categorySort","config","add","appliedAttributeGroup","join","catTypeId","hillo","post","JSON","stringify","showLoading","edit","postWithUploadFile","remove","load","filter","get","response","content","randomColor","list","IKUtils","Math","round","random","toast","removeAllColor","removeCategoryImage","categoryId","ModelFactory","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","ref","staticStyle","model","$t","on","reloaded","staticRenderFns","code","dishName","dishesCategoryId","Category","itemText","threshold","shortFactor","ids","i18n","locale","component","VContainer","name","functional","props","tag","data","classes","Object","value","h","fluid","mergeData","class","Array","align","desc","printTitle","multiSelect","attrubuteCount","op"],"mappings":"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","file":"js/chunk-1746b4e0.1f04a6b7.js","sourcesContent":["import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\nimport CategoryType from './CategoryType'\nimport StringEntity from './StringEntity'\nimport GlobalSettings from '@/GlobalSettings'\nimport IKUtils from 'innerken-js-utils'\nimport store from '../store'\nimport AttributeGroup from './AttributeGroup'\n\nconst i = Boolean(GlobalSettings.isShowOnTable === '0')\n\nconst colorList = ['#FFCDD2', '#F8BBD0', '#E1BEE7',\n  '#D1C4E9', '#C5CAE9', '#BBDEFB',\n  '#B3E5FC', '#B2EBF2', '#B2DFDB',\n  '#C8E6C9', '#DCEDC8', '#F0F4C3',\n  '#FFF9C4', '#FFECB3', '#FFE0B2',\n  '#FFCCBC', '#D7CCC8', '#CFD8DC']\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    form: false,\n    table: false,\n  },\n  color: {\n    type: IKDataEntity.Types.Color,\n    formConfig: {\n      required: false,\n    },\n  },\n  dcImage: {\n    type: IKDataEntity.Types.Image,\n    formConfig: {\n      required: false,\n      type: {\n        root: () => store.getters.rootUrl + GlobalSettings.dcImageRoot,\n      },\n    },\n    displayName: 'image',\n    header: i,\n  },\n  attributeGroupId: {\n    displayName: 'attributeGroupNames',\n    type: IKDataEntity.Types.Option,\n    tableConfig: {\n      width: '100px',\n    },\n    formConfig: {\n      required: false,\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n      },\n    },\n  },\n  _langsname: {\n    displayName: 'KategorieName',\n    form: false,\n  },\n  langs: {\n    displayName: 'labelName',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'labelName',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toUpperCase() === GlobalSettings.getLang().toUpperCase()\n      },\n      displayChild: (key) => {\n        console.log(key)\n        return key === 'name'\n      },\n    },\n    childKey: ['name', 'desc'],\n    labelKey: 'lang',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n    header: false,\n  },\n  dishesCategoryTypeId: {\n    displayName: 'warengruppe',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: CategoryType.getList,\n      },\n    },\n  },\n\n  printOrder: {\n    type: IKDataEntity.Types.Integer,\n    required: false,\n    formConfig: {\n      default: 50,\n      requiredNew: false,\n      requiredEdit: false,\n      rule: [ // ^-[1-9]\\d*$\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die ganze Zahl ein',\n      ],\n    },\n  },\n  categorySort: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'sectionSort',\n    formConfig: {\n      required: true,\n    },\n  },\n\n}\n\nconst config = {\n\n  add: function (item) {\n    item.appliedAttributeGroup = item.attributeGroupId.join(',')\n    item.catTypeId = item.dishesCategoryTypeId\n    return hillo.post('Category.php?op=add', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    item.appliedAttributeGroup = item.attributeGroupId.join(',')\n    item.catTypeId = item.dishesCategoryTypeId\n\n    console.log('label-manage: item()', item)\n    return hillo.postWithUploadFile('Category.php?op=update', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Category.php?op=delete', { id: id })\n  },\n  load: async function (filter) {\n    const response = (await hillo.get('Category.php', filter)).content\n    console.log(response, 'cate response')\n    return response\n  },\n  randomColor: async function (list) {\n    IKUtils.showLoading(true)\n    for (const item of list) {\n      item.appliedAttributeGroup = item.attributeGroupId.join(',')\n      item.catTypeId = item.dishesCategoryTypeId\n\n      item.color = colorList[Math.round(Math.random() * 18)]\n\n      await hillo.postWithUploadFile('Category.php?op=update', {\n        ...item,\n        langs: JSON.stringify(item.langs),\n      }, {\n        showLoading: false,\n      })\n    }\n    IKUtils.toast('OK')\n  },\n\n  removeAllColor: async function (list) {\n    IKUtils.showLoading(true)\n    for (const item of list) {\n      item.appliedAttributeGroup = item.attributeGroupId.join(',')\n      item.catTypeId = item.dishesCategoryTypeId\n      item.color = '#FFFFFF'\n      await hillo.postWithUploadFile('Category.php?op=update', {\n        ...item,\n        langs: JSON.stringify(item.langs),\n      }, {\n        showLoading: false,\n      })\n    }\n    IKUtils.toast('OK')\n  },\n\n  removeCategoryImage: async function (categoryId) {\n    await hillo.post('Category.php?op=removeCategoryImage', {\n      ...categoryId,\n    }, {\n      showLoading: true,\n    })\n  },\n\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n// export const Category = IKDataEntity.ModelFactory(entity, config)\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"fill-height align-start\",attrs:{\"id\":\"data-tables\",\"fluid\":\"\",\"tag\":\"section\"}},[_c('ik-data-table',{ref:\"table\",staticStyle:{\"width\":\"100%\"},attrs:{\"model\":_vm.model,\"entity-name\":_vm.$t('库存'),\"icon\":\"mdi-label\"},on:{\"reloaded\":_vm.reloaded}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\nimport Category from '@/model/Category'\nimport i18n from '../i18n'\n\nconst entity = {\n  id: {},\n  code: {},\n  dishName: {\n    displayName: 'name',\n  },\n  dishesCategoryId: {\n    displayName: '分类',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Category.getList,\n        itemText: '_langsname',\n      },\n    },\n  },\n\n  threshold: {\n  },\n  shortFactor: {},\n\n}\n\nconst config = {\n  edit: async function (item) {\n    item.ids = item.id\n    return (await hillo.post('DCache.php?op=setDCachePropertyForIdIn',\n      item,\n    )).content\n  },\n\n  load: async function (filter) {\n    return ((await hillo.get('DCache.php?op=showDCacheProperty',\n      { lang: i18n.locale },\n    )).content)\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","<template>\n  <v-container\n    id=\"data-tables\"\n    class=\"fill-height align-start\"\n    fluid\n    tag=\"section\"\n  >\n    <ik-data-table\n      ref=\"table\"\n      :model=\"model\"\n      :entity-name=\"$t('库存')\"\n      icon=\"mdi-label\"\n      style=\"width: 100%\"\n      @reloaded=\"reloaded\"\n    />\n  </v-container>\n</template>\n\n<script>\n  import { IkDataTable } from 'metaflow-js'\n  import DCacheProperty from '../../model/DCacheProperty'\n\n  export default {\n    components: {\n      IkDataTable,\n    },\n    data: function () {\n      return ({\n        model: DCacheProperty,\n      })\n    },\n    methods: {\n      reloaded () {\n      },\n    },\n  }\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DCacheTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DCacheTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DCacheTable.vue?vue&type=template&id=26bdc2b0&scoped=true&\"\nimport script from \"./DCacheTable.vue?vue&type=script&lang=js&\"\nexport * from \"./DCacheTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"26bdc2b0\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer})\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n","import { IKDataEntity } from 'metaflow-js'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {\n    displayName: 'Name',\n  },\n  lang: {},\n  desc: {\n    displayName: 'Beschreibung',\n    formConfig: {\n      required: false,\n    },\n  },\n}\nexport default IKDataEntity.ModelFactory(entity, {})\n","import GlobalSettings from '@/GlobalSettings'\n\nimport { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  name: {},\n  printTitle: {},\n  required: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  multiSelect: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  attrubuteCount: {\n    type: IKDataEntity.Types.Integer,\n    form: false,\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Category.php', {\n      op: 'showAttributeGroup',\n      lang: GlobalSettings.getLang(),\n      ...filter,\n    }))\n      .content\n  },\n  add: function (item) {\n    return hillo.postWithUploadFile('Category.php?op=addAttributeGroup', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Category.php?op=updateAttributeGroup', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Category.php?op=deleteAttributeGroup', { id: id })\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import GlobalSettings from '@/GlobalSettings'\nimport { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {},\n  lang: {},\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('CategoryType.php', {\n      lang: GlobalSettings.getLang(),\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n"],"sourceRoot":""}