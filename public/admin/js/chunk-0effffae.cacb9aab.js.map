{"version":3,"sources":["webpack:///./src/views/User/MemberCardSaleRecord.vue?327a","webpack:///./src/model/MemberCardRecord.js","webpack:///src/views/User/MemberCardSaleRecord.vue","webpack:///./src/views/User/MemberCardSaleRecord.vue?9c99","webpack:///./src/views/User/MemberCardSaleRecord.vue","webpack:///./src/model/ParentCategoty.js","webpack:///./src/model/Category.js","webpack:///./src/model/PrinterGroup.js","webpack:///./src/model/Allergen.js","webpack:///./src/model/StringEntity.js","webpack:///./src/model/AttributeGroup.js","webpack:///./src/model/Dish.js","webpack:///./src/model/CategoryType.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","model","$t","scopedSlots","_u","key","fn","proxy","ref","item","on","$event","goNext","_v","staticRenderFns","entity","id","type","IKDataEntity","Types","Integer","displayName","tableConfig","align","dishesId","Option","formConfig","selectItems","Dish","getList","itemText","createdAt","totalAmount","leftAmount","longId","config","load","filter","hillo","get","op","content","ModelFactory","component","VContainer","VIcon","VToolbar","requiredNew","_langsname","form","langs","Group","groupName","default","GlobalSettings","supportLang","childLabelKey","displayCondition","lang","toUpperCase","getLang","displayChild","childKey","labelKey","children","StringEntity","header","i","Boolean","isShowOnTable","colorList","add","appliedAttributeGroup","attributeGroupId","join","catTypeId","dishesCategoryTypeId","post","JSON","stringify","showLoading","edit","console","log","postWithUploadFile","remove","response","randomColor","list","IKUtils","color","Math","round","random","toast","removeAllColor","removeCategoryImage","categoryId","dcImage","Image","required","root","store","getters","rootUrl","dcImageRoot","CategoryType","width","AttributeGroup","multiple","printOrder","requiredEdit","rule","v","test","parentId","ParentCategoty","categorySort","name","isSingleLinePrint","isSingleOrderPrint","upsideDown","printerCount","inEdit","inNew","defaultRetryCount","totalDishesCount","icon","shortName","displayText","desc","printTitle","multiSelect","attrubuteCount","code","image","dishImageRoot","dishName","price","Float","overwriteRule","toLowerCase","printGroupId","i18n","t","PrinterGroup","extraPrintGroupIds","Category","AllergenId","Allergen","merge","disabledItem","editedItem","inheritAttributeGroupId","disabled","includes","localAttributeGroupId","dishWeight","isActive","dishAlias","Color","multipleAdd","params","attributeGroup","allergenGroup","file","imageExt","split","onlyActive","map","dishId","flat","description","DishModel","getBuffet"],"mappings":"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","file":"js/chunk-0effffae.cacb9aab.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"fill-height align-start\",attrs:{\"id\":\"data-tables\",\"fluid\":\"\",\"tag\":\"section\"}},[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('ik-data-table',{attrs:{\"model\":_vm.model,\"icon\":\"mdi-cards\",\"entity-name\":_vm.$t('会员卡销售记录'),\"use-default-action\":false,\"use-select\":false},scopedSlots:_vm._u([{key:\"footer\",fn:function(){return [_c('v-toolbar',{attrs:{\"color\":\"white\",\"flat\":\"\"}})]},proxy:true},{key:\"item.action\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('v-icon',{staticClass:\"mr-2\",attrs:{\"small\":\"\"},on:{\"click\":function($event){return _vm.goNext(item)}}},[_vm._v(\" mdi-arrow-right \")])]}}])})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\nimport Dish from './Dish'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n  },\n  dishesId: {\n    displayName: 'memberCardName',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Dish.getList,\n        itemText: '_langsname',\n      },\n    },\n  },\n  createdAt: {\n  },\n  totalAmount: {\n  },\n  leftAmount: {\n  },\n  longId: {\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('MemberCard.php', {\n      op: 'showAllMemberCardSaleRecord',\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","<template>\n  <v-container\n    id=\"data-tables\"\n    class=\"fill-height align-start\"\n    fluid\n    tag=\"section\"\n  >\n    <v-container\n      fluid\n    >\n      <ik-data-table\n        :model=\"model\"\n        icon=\"mdi-cards\"\n        :entity-name=\" $t('会员卡销售记录')\"\n        :use-default-action=\"false\"\n        :use-select=\"false\"\n      >\n        <template v-slot:footer>\n          <v-toolbar\n            color=\"white\"\n            flat\n          />\n        </template>\n        <template v-slot:item.action=\"{ item }\">\n          <v-icon\n            class=\"mr-2\"\n            small\n            @click=\"goNext(item)\"\n          >\n            mdi-arrow-right\n          </v-icon>\n        </template>\n      </ik-data-table>\n    </v-container>\n  </v-container>\n</template>\n\n<script>\n\n  import { IkDataTable } from 'metaflow-js'\n  import MemberCardRecord from '../../model/MemberCardRecord'\n\n  export default {\n    components: {\n      IkDataTable,\n    },\n    data: function () {\n      return ({\n        model: MemberCardRecord,\n      })\n    },\n    methods: {\n      goNext (item) {\n        this.$router.push({\n          name: '消费记录',\n          params: { id: item.id },\n        })\n      },\n    },\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MemberCardSaleRecord.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MemberCardSaleRecord.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MemberCardSaleRecord.vue?vue&type=template&id=60516759&\"\nimport script from \"./MemberCardSaleRecord.vue?vue&type=script&lang=js&\"\nexport * from \"./MemberCardSaleRecord.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VContainer,VIcon,VToolbar})\n","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\nimport StringEntity from './StringEntity'\nimport GlobalSettings from '@/GlobalSettings'\n\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Category.php', {\n      ...filter,\n    })).content\n  },\n}\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  _langsname: {\n    displayName: 'labelName',\n    form: false,\n  },\n  langs: {\n    displayName: 'labelName',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'labelName',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toUpperCase() === GlobalSettings.getLang()\n      },\n      displayChild: (key) => {\n        return key === 'name'\n      },\n    },\n    childKey: ['name', 'desc'],\n    labelKey: 'lang',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n    header: false,\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\nimport CategoryType from './CategoryType'\nimport AttributeGroup from './AttributeGroup'\nimport StringEntity from './StringEntity'\nimport GlobalSettings from '@/GlobalSettings'\nimport ParentCategoty from './ParentCategoty'\nimport IKUtils from 'innerken-js-utils'\nimport store from '../store'\n\nconst i = Boolean(GlobalSettings.isShowOnTable === '0')\n\nconst colorList = ['#FFCDD2', '#F8BBD0', '#E1BEE7',\n                    '#D1C4E9', '#C5CAE9', '#BBDEFB',\n                    '#B3E5FC', '#B2EBF2', '#B2DFDB',\n                    '#C8E6C9', '#DCEDC8', '#F0F4C3',\n                    '#FFF9C4', '#FFECB3', '#FFE0B2',\n                    '#FFCCBC', '#D7CCC8', '#CFD8DC']\n\nconst config = {\n\n  add: function (item) {\n    item.appliedAttributeGroup = item.attributeGroupId.join(',')\n    item.catTypeId = item.dishesCategoryTypeId\n    return hillo.post('Category.php?op=add', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    item.appliedAttributeGroup = item.attributeGroupId.join(',')\n    item.catTypeId = item.dishesCategoryTypeId\n\n    console.log('label-manage: item()', item)\n    return hillo.postWithUploadFile('Category.php?op=update', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Category.php?op=delete', { id: id })\n  },\n  load: async function (filter) {\n    const response = (await hillo.get('Category.php', filter)).content\n    console.log(response, 'cate response')\n    return response\n  },\n  randomColor: async function (list) {\n    IKUtils.showLoading(true)\n    for (const item of list) {\n      item.appliedAttributeGroup = item.attributeGroupId.join(',')\n      item.catTypeId = item.dishesCategoryTypeId\n\n      item.color = colorList[Math.round(Math.random() * 18)]\n\n      await hillo.postWithUploadFile('Category.php?op=update', {\n        ...item,\n        langs: JSON.stringify(item.langs),\n      }, {\n        showLoading: false,\n      })\n    }\n    IKUtils.toast('OK')\n  },\n\n  removeAllColor: async function (list) {\n    IKUtils.showLoading(true)\n    for (const item of list) {\n      item.appliedAttributeGroup = item.attributeGroupId.join(',')\n      item.catTypeId = item.dishesCategoryTypeId\n\n      item.color = '#FFFFFF'\n      hillo.postWithUploadFile('Category.php?op=update', {\n        ...item,\n        langs: JSON.stringify(item.langs),\n      }, {\n        showLoading: false,\n      })\n    }\n    IKUtils.toast('OK')\n  },\n\n  removeCategoryImage: async function (categoryId) {\n    await hillo.post('Category.php?op=removeCategoryImage', {\n      ...categoryId,\n    }, {\n        showLoading: true,\n    })\n  },\n\n}\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  _langsname: {\n    displayName: 'labelName',\n    form: false,\n  },\n  dcImage: {\n    type: IKDataEntity.Types.Image,\n    formConfig: {\n      required: false,\n      type: {\n        root: () => store.getters.rootUrl + GlobalSettings.dcImageRoot,\n      },\n    },\n    displayName: 'Label Image',\n    header: i,\n  },\n  langs: {\n    displayName: 'labelName',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'labelName',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toUpperCase() === GlobalSettings.getLang().toUpperCase()\n      },\n      displayChild: (key) => {\n        console.log(key)\n        return key === 'name'\n      },\n    },\n    childKey: ['name', 'desc'],\n    labelKey: 'lang',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n    header: false,\n  },\n  dishesCategoryTypeId: {\n    displayName: 'labelType',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: CategoryType.getList,\n      },\n    },\n  },\n  attributeGroupId: {\n    displayName: 'attributeGroupNames',\n    type: IKDataEntity.Types.Option,\n    tableConfig: {\n      width: '100px',\n    },\n    formConfig: {\n      required: false,\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n      },\n    },\n  },\n  // color: {\n  //   type: IKDataEntity.Types.Color,\n  //   formConfig: {\n  //     required: false,\n  //   },\n  // },\n  printOrder: {\n    type: IKDataEntity.Types.Integer,\n    required: false,\n    formConfig: {\n      default: 50,\n      requiredNew: false,\n      requiredEdit: false,\n      rule: [ // ^-[1-9]\\d*$\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die ganze Zahl ein',\n      ],\n    },\n  },\n  parentId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      required: false,\n      type: {\n        selectItems: ParentCategoty.getList,\n        itemText: '_langsname',\n      },\n    },\n    header: false,\n  },\n\n  categorySort: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'sectionSort',\n    formConfig: {\n      required: true,\n    },\n  },\n\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n// export const Category = IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  name: {\n    displayName: 'sectionName',\n  },\n  isSingleLinePrint: {\n    type: IKDataEntity.Types.Boolean,\n    displayName: 'isSingleLinePrint',\n  },\n  isSingleOrderPrint: {\n    type: IKDataEntity.Types.Boolean,\n    displayName: 'isSingleOrderPrint',\n  },\n  upsideDown: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  printerCount: {\n    displayName: 'printerCount',\n    formConfig: {\n      inEdit: false,\n      inNew: false,\n    },\n  },\n  defaultRetryCount: {\n    formConfig: {\n      default: '0',\n    },\n  },\n  totalDishesCount: {\n    formConfig: {\n      inEdit: false,\n      inNew: false,\n    },\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Printer.php', {\n      op: 'showPrinterGroups',\n      ...filter,\n    }))\n      .content\n  },\n  add: function (item) {\n    return hillo.postWithUploadFile('Printer.php?op=addPrinterGroups', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Printer.php?op=updatePrinterGroups', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Printer.php?op=deletePrinterGroup', { id: id })\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  name: {\n    displayName: 'allergName',\n  },\n  icon: {\n    displayName: 'icon',\n  },\n  shortName: {\n    displayName: 'shortName',\n  },\n  displayText: {\n    displayName: 'displayText',\n  },\n}\nconst config = {\n  add: function (item) {\n    return hillo.postWithUploadFile('Dishes.php?op=addAllergen', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Dishes.php?op=updateAllergen', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Dishes.php?op=deleteAllergen', { id: id })\n  },\n  load: async function (filter) {\n    return (await hillo.get('Dishes.php', {\n      op: 'showAllAllergen',\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'metaflow-js'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {\n    displayName: 'Name',\n  },\n  lang: {},\n  desc: {\n    displayName: 'Beschreibung',\n    formConfig: {\n      required: false,\n    },\n  },\n}\nexport default IKDataEntity.ModelFactory(entity, {})\n","import GlobalSettings from '@/GlobalSettings'\n\nimport { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  name: {},\n  printTitle: {},\n  required: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  multiSelect: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  attrubuteCount: {\n    type: IKDataEntity.Types.Integer,\n    form: false,\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Category.php', {\n      op: 'showAttributeGroup',\n      lang: GlobalSettings.getLang(),\n      ...filter,\n    }))\n      .content\n  },\n  add: function (item) {\n    return hillo.postWithUploadFile('Category.php?op=addAttributeGroup', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Category.php?op=updateAttributeGroup', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Category.php?op=deleteAttributeGroup', { id: id })\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\nimport GlobalSettings from '@/GlobalSettings'\nimport store from '../store'\nimport Category from './Category'\nimport PrinterGroup from './PrinterGroup'\nimport Allergen from './Allergen'\nimport StringEntity from './StringEntity'\nimport AttributeGroup from './AttributeGroup'\nimport i18n from '../i18n'\n\nconst i = Boolean(GlobalSettings.isShowOnTable === '0')\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    form: false,\n  },\n  code: {},\n  image: {\n    type: IKDataEntity.Types.Image,\n    formConfig: {\n      type: {\n        root: () => store.getters.rootUrl + GlobalSettings.dishImageRoot,\n      },\n      required: false,\n    },\n    displayName: 'image',\n    header: i,\n  },\n  dishName: {\n    displayName: 'name',\n    form: false,\n  },\n  price: {\n    type: IKDataEntity.Types.Float,\n    formConfig: {\n      default: '',\n      overwriteRule: true,\n      rule: [\n        v => /^[0-9]+\\.{0,1}[0-9]{0,2}$/.test(v) || 'Bitte geben Sie den richtigen Preis ein',\n      ],\n    },\n  },\n  langs: {\n    displayName: 'name',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'name',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toLowerCase() === GlobalSettings.getLang().toLowerCase()\n      },\n      displayChild: (key) => {\n        return key === 'name'\n      },\n    },\n    childKey: ['name', 'desc'],\n    labelKey: 'lang',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n    header: false,\n  },\n  printGroupId: {\n    displayName: i18n.t('printCatName'),\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      default: 1,\n      type: {\n        selectItems: PrinterGroup.getList,\n      },\n    },\n  },\n  extraPrintGroupIds: {\n    displayName: i18n.t('extraPrintGroup'),\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        multiple: true,\n        selectItems: PrinterGroup.getList,\n      },\n      required: false,\n    },\n    header: false,\n  },\n  categoryId: {\n    displayName: 'labelName',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Category.getList,\n        itemText: '_langsname',\n      },\n    },\n  },\n  AllergenId: {\n    displayName: i18n.t('过敏源'),\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Allergen.getList,\n        multiple: true,\n      },\n      required: false,\n    },\n    header: false,\n  },\n  attributeGroupId: {\n    displayName: i18n.t('attributeGroupNames'),\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      merge: false,\n      required: false,\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n        disabledItem: (item, editedItem) => {\n          if (editedItem.inheritAttributeGroupId) {\n            return ({\n              ...item,\n              disabled: editedItem.inheritAttributeGroupId.includes(item.id),\n            })\n          } else {\n            return item\n          }\n        },\n      },\n    },\n    header: false,\n  },\n  localAttributeGroupId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n      },\n    },\n    form: false,\n    header: false,\n  },\n  inheritAttributeGroupId: {\n    displayName: 'AttributeGroupName',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n      },\n    },\n    form: false,\n    header: false,\n  },\n  dishWeight: {\n    displayName: 'DishWeight',\n    type: IKDataEntity.Types.Integer,\n    formConfig: {\n      default: 1,\n      required: false,\n      rule: [ // ^-[1-9]\\d*$\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die ganze Zahl ein',\n      ],\n    },\n    header: false,\n  },\n  isActive: {\n    type: IKDataEntity.Types.Boolean,\n    displayName: 'isActive',\n    formConfig: {\n      default: 1,\n      required: false,\n    },\n  },\n  dishAlias: {\n    required: false,\n    formConfig: {\n      requiredNew: false,\n      requiredEdit: false,\n    },\n    header: false,\n  },\n  color: {\n    type: IKDataEntity.Types.Color,\n    formConfig: {\n      required: false,\n    },\n  },\n}\nconst config = {\n  multipleAdd: function (item) {\n    return hillo.postWithUploadFile('Dishes.php?op=add', {\n      ...item,\n      params: JSON.stringify(item),\n    }, { showLoading: false })\n  },\n  add: function (item) {\n    item.attributeGroup = item.attributeGroupId\n      .filter(i => !item.inheritAttributeGroupId.includes(i)).join(',')\n    item.allergenGroup = item.AllergenId.join(',')\n    item.extraPrintGroupIds = item.extraPrintGroupIds.join(',')\n    return hillo.postWithUploadFile('Dishes.php?op=add', {\n      ...item,\n      params: JSON.stringify(item),\n    }, { showLoading: true })\n  },\n  edit: function (item) {\n    item.attributeGroup = item.attributeGroupId\n      .filter(i => !item.inheritAttributeGroupId.includes(i)).join(',')\n    item.allergenGroup = item.AllergenId.join(',')\n    item.extraPrintGroupIds = item.extraPrintGroupIds.join(',')\n    if (item.file) {\n      item.imageExt = item.file.name.split('.')[1]\n    }\n    item.isActive = item.isActive ? 1 : 0\n    return hillo.postWithUploadFile('Dishes.php?op=update', {\n      ...item,\n      params: JSON.stringify(item),\n    }, { showLoading: true })\n  },\n  remove: function (id) {\n    return hillo.post('Dishes.php?op=delete', { id: id })\n  },\n  load: async function (filter) {\n    return (await hillo.get('Dishes.php', {\n      lang: GlobalSettings.getLang(),\n      onlyActive: 0,\n      ...filter,\n    }))\n      .content.map(function (item) {\n        item.id = item.dishId\n        item.attributeGroupId = [\n          item.inheritAttributeGroupId ? item.inheritAttributeGroupId.split(',') : [],\n          item.localAttributeGroupId ? item.localAttributeGroupId.split(',') : [],\n        ].flat().join(',')\n        item.langs = item.langs.map(i => {\n          return {\n            ...i,\n            desc: i.description,\n          }\n        })\n        return item\n      })\n  },\n}\nconst DishModel = IKDataEntity.ModelFactory(entity, config)\nDishModel.getBuffet = async function () {\n  return (await DishModel.getList()).filter(i => i.dishesCategoryTypeId === '8')\n}\nexport default DishModel\n","import GlobalSettings from '@/GlobalSettings'\nimport { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {},\n  lang: {},\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('CategoryType.php', {\n      lang: GlobalSettings.getLang(),\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n"],"sourceRoot":""}