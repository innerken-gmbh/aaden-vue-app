{"version":3,"sources":["webpack:///./src/model/Servant.js","webpack:///./src/model/PrinterGroup.js","webpack:///./src/model/Section.js","webpack:///./src/model/PrinterType.js","webpack:///./src/model/DeviceList.js","webpack:///./src/views/Printer/DeviceList.vue?0ec8","webpack:///src/views/Printer/DeviceList.vue","webpack:///./src/views/Printer/DeviceList.vue?51ba","webpack:///./src/views/Printer/DeviceList.vue"],"names":["entity","id","type","IKDataEntity","Types","Integer","displayName","tableConfig","align","form","photo","Image","formConfig","root","store","getters","rootUrl","GlobalSettings","servantRoot","requiredEdit","requiredNew","md","header","name","password","permission","Boolean","isPartTime","config","add","item","hillo","postWithUploadFile","showLoading","edit","file","imageExt","split","lastItem","remove","post","load","filter","get","lang","getLang","content","ModelFactory","isSingleLinePrint","isSingleOrderPrint","upsideDown","printerCount","inEdit","inNew","defaultRetryCount","default","totalDishesCount","op","image","required","servantIds","Option","selectItems","Servant","getList","multiple","tableCount","JSON","stringify","isSticker","lineLength","typeDesc","typeName","printerName","printerTypeId","PrinterType","itemText","identity","sn","key","groupId","PrinterGroup","sectionIds","Section","generalLoad","data","groupIds","printerSectionID","render","_vm","this","_h","$createElement","_c","_self","attrs","model","$t","staticRenderFns","component"],"mappings":"iPAKMA,EAAS,CACbC,GAAI,CACFC,KAAMC,kBAAaC,MAAMC,QACzBC,YAAa,KACbC,YAAa,CACXC,MAAO,SAETC,MAAM,GAERC,MAAO,CACLJ,YAAa,QACbJ,KAAMC,kBAAaC,MAAMO,MACzBC,WAAY,CACVV,KAAM,CACJW,KAAM,kBAAMC,OAAMC,QAAQC,QAAUC,OAAeC,cAErDC,cAAc,EACdC,aAAa,EACbC,GAAI,IAENC,QAAQ,GAEVC,KAAM,CACJjB,YAAa,eAEfkB,SAAU,GAEVC,WAAY,CACVvB,KAAMC,kBAAaC,MAAMsB,SAE3BC,WAAY,CACVzB,KAAMC,kBAAaC,MAAMsB,UAGvBE,EAAS,CACbC,IAAK,SAAUC,GACb,OAAOC,IAAMC,mBAAmB,qBAAsBF,EAAM,CAC1DG,aAAa,KAGjBC,KAAM,SAAUJ,GAId,OAHIA,EAAKK,OACPL,EAAKM,SAAWN,EAAKK,KAAKZ,KAAKc,MAAM,KAAKC,UAErCP,IAAMC,mBAAmB,wBAAyBF,EAAM,CAC7DG,aAAa,KAGjBM,OAAQ,SAAUtC,GAChB,OAAO8B,IAAMS,KAAK,wBAAyB,CAAEvC,GAAIA,KAEnDwC,KAAM,WAAF,8CAAE,WAAgBC,GAAhB,iGACUX,IAAMY,IAAI,cAAV,gBAA2BC,KAAM3B,OAAe4B,WAAcH,IADxE,uCAEDI,SAFC,2CAAF,sDAAE,IAMO3C,yBAAa4C,aAAa/C,EAAQ4B,I,2GC3D3C5B,EAAS,CACbC,GAAI,CACFC,KAAMC,kBAAaC,MAAMC,QACzBC,YAAa,KACbC,YAAa,CACXC,MAAO,SAETC,MAAM,GAERc,KAAM,CACJjB,YAAa,eAEf0C,kBAAmB,CACjB9C,KAAMC,kBAAaC,MAAMsB,QACzBpB,YAAa,qBAEf2C,mBAAoB,CAClB/C,KAAMC,kBAAaC,MAAMsB,QACzBpB,YAAa,sBAEf4C,WAAY,CACVhD,KAAMC,kBAAaC,MAAMsB,SAE3ByB,aAAc,CACZ7C,YAAa,eACbM,WAAY,CACVwC,QAAQ,EACRC,OAAO,IAGXC,kBAAmB,CACjB1C,WAAY,CACV2C,QAAS,MAGbC,iBAAkB,CAChB5C,WAAY,CACVwC,QAAQ,EACRC,OAAO,KAIPzB,EAAS,CACba,KAAM,WAAF,8CAAE,WAAgBC,GAAhB,iGACUX,IAAMY,IAAI,cAAV,gBACZc,GAAI,qBACDf,IAHD,uCAKDI,SALC,2CAAF,sDAAE,GAONjB,IAAK,SAAUC,GACb,OAAOC,IAAMC,mBAAmB,kCAAmCF,EAAM,CACvEG,aAAa,KAGjBC,KAAM,SAAUJ,GACd,OAAOC,IAAMC,mBAAmB,qCAAsCF,EAAM,CAC1EG,aAAa,KAGjBM,OAAQ,SAAUtC,GAChB,OAAO8B,IAAMS,KAAK,oCAAqC,CAAEvC,GAAIA,MAIlDE,yBAAa4C,aAAa/C,EAAQ4B,I,iJC9D3C5B,EAAS,CACbC,GAAI,CACFC,KAAMC,kBAAaC,MAAMC,QACzBC,YAAa,KACbC,YAAa,CACXC,MAAO,UAGXe,KAAM,CACJjB,YAAa,eAEfoD,MAAO,CACLxD,KAAMC,kBAAaC,MAAMO,MACzBC,WAAY,CACVV,KAAM,CACJW,KAAM,kBAAMC,OAAMC,QAAQC,UAE5B2C,UAAU,GAEZrD,YAAa,cAEfsD,WAAY,CACVtD,YAAa,cACbJ,KAAMC,kBAAaC,MAAMyD,OACzBjD,WAAY,CACVV,KAAM,CACJ4D,YAAaC,OAAQC,QACrBC,UAAU,KAIhBC,WAAY,CACVzD,MAAM,IAGJmB,EAAS,CACbC,IAAK,SAAUC,GAEb,OADAA,EAAK8B,WAAaO,KAAKC,UAAUtC,EAAK8B,YAC/B7B,IAAMC,mBAAmB,qBAAsBF,EAAM,CAC1DG,aAAa,KAGjBC,KAAM,SAAUJ,GAEd,OADAA,EAAK8B,WAAaO,KAAKC,UAAUtC,EAAK8B,YAC/B7B,IAAMC,mBAAmB,wBAAyBF,EAAM,CAC7DG,aAAa,KAGjBM,OAAQ,SAAUtC,GAChB,OAAO8B,IAAMS,KAAK,wBAAyB,CAAEvC,GAAIA,KAEnDwC,KAAM,WAAF,8CAAE,WAAgBC,GAAhB,iGACUX,IAAMY,IAAI,cAAV,gBACZc,GAAI,OACJb,KAAM3B,OAAe4B,WAClBH,IAJD,uCAMDI,SANC,2CAAF,sDAAE,IAUO3C,yBAAa4C,aAAa/C,EAAQ4B,I,iIChE3C5B,EAAS,CACbC,GAAI,CACFC,KAAMC,kBAAaC,MAAMC,QACzBC,YAAa,KACbC,YAAa,CACXC,MAAO,UAGX6D,UAAW,CACT/D,YAAa,aAEfgE,WAAY,CACVhE,YAAa,cAEfiE,SAAU,CACRjE,YAAa,YAEfkE,SAAU,CACRlE,YAAa,aAGXsB,EAAS,CACba,KAAM,WAAF,8CAAE,WAAgBC,GAAhB,iGACUX,IAAMY,IAAI,cAAV,gBACZc,GAAI,mBACDf,IAHD,uCAKDI,SALC,2CAAF,sDAAE,IASO3C,oBAAa4C,aAAa/C,EAAQ4B,G,YC5B3C5B,EAAS,CACbC,GAAI,CACFC,KAAMC,kBAAaC,MAAMC,QACzBC,YAAa,WACbC,YAAa,CACXC,MAAO,SAETI,WAAY,CACVQ,aAAa,IAGjBqD,YAAa,CACXnE,YAAa,eAEfoE,cAAe,CACbxE,KAAMC,kBAAaC,MAAMyD,OACzBjD,WAAY,CACVV,KAAM,CACJ4D,YAAaa,EAAYX,QACzBY,SAAU,YAEZzD,cAAc,GAEhBb,YAAa,mBAEfuE,SAAU,CACRvE,YAAa,WACbgB,QAAQ,EACRV,WAAY,CACVwC,QAAQ,IAGZ0B,GAAI,CACFxE,YAAa,MAEfyE,IAAK,CACHzE,YAAa,MACbM,WAAY,CACVwC,QAAQ,IAGZ4B,QAAS,CACP9E,KAAMC,kBAAaC,MAAMyD,OACzBjD,WAAY,CACVV,KAAM,CACJ4D,YAAamB,OAAajB,QAC1BY,SAAU,OACVX,UAAU,GAEZ9C,cAAc,GAEhBb,YAAa,gBAEf4E,WAAY,CACVhF,KAAMC,kBAAaC,MAAMyD,OACzBjD,WAAY,CACVV,KAAM,CACJ4D,YAAaqB,OAAQnB,QACrBY,SAAU,OACVX,UAAU,GAEZ9C,cAAc,GAEhBb,YAAa,gBAKXsB,EAAS,CACba,KAAM,WAAF,8CAAE,WAAgBC,GAAhB,uGACevC,kBAAaiF,YAAY,cAAzB,gBACjB3B,GAAI,wBACDf,IAHD,cACE2C,EADF,yBAKGA,EAAKvC,SALR,2CAAF,sDAAE,GAONjB,IAAK,SAAUC,GAKb,OAJAA,EAAKwD,SAAWnB,KAAKC,UAAUtC,EAAKkD,SACpClD,EAAKP,KAAOO,EAAK2C,YACjB3C,EAAKyD,iBAAmBpB,KAAKC,UAAUtC,EAAKoD,YAErCnD,IAAMC,mBAAmB,qBAAsBF,EAAM,CAC1DG,aAAa,KAGjBC,KAAM,SAAUJ,GAKd,OAJAA,EAAKwD,SAAWnB,KAAKC,UAAUtC,EAAKkD,SACpClD,EAAKP,KAAOO,EAAK2C,YACjB3C,EAAKyD,iBAAmBpB,KAAKC,UAAUtC,EAAKoD,YAErCnD,IAAMC,mBAAmB,sBAAuBF,EAAM,CAC3DG,aAAa,KAGjBM,OAAQ,SAAUtC,GAChB,OAAO8B,IAAMS,KAAK,wBAAyB,CAAEvC,GAAIA,MAItCE,yBAAa4C,aAAa/C,EAAQ4B,I,yCCzGjD,IAAI4D,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,gBAAgB,CAACE,MAAM,CAAC,MAAQN,EAAIO,MAAM,cAAcP,EAAIQ,GAAG,QAAQ,KAAO,kBAC7KC,EAAkB,G,wBCYtB,GACE,WAAF,CAAI,YAAJ,kBACE,KAAF,WACI,MAAJ,CACM,MAAN,UCjBmW,I,YCO/VC,EAAY,eACd,EACAX,EACAU,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/chunk-14b4b549.7f9e7374.js","sourcesContent":["import GlobalSettings from '@/GlobalSettings'\r\nimport store from '../store'\r\nimport { IKDataEntity } from 'metaflow-js'\r\nimport hillo from 'hillo'\r\n\r\nconst entity = {\r\n  id: {\r\n    type: IKDataEntity.Types.Integer,\r\n    displayName: 'id',\r\n    tableConfig: {\r\n      align: 'start',\r\n    },\r\n    form: false,\r\n  },\r\n  photo: {\r\n    displayName: 'image',\r\n    type: IKDataEntity.Types.Image,\r\n    formConfig: {\r\n      type: {\r\n        root: () => store.getters.rootUrl + GlobalSettings.servantRoot,\r\n      },\r\n      requiredEdit: false,\r\n      requiredNew: false,\r\n      md: 12,\r\n    },\r\n    header: false,\r\n  },\r\n  name: {\r\n    displayName: 'servantName',\r\n  },\r\n  password: {\r\n  },\r\n  permission: {\r\n    type: IKDataEntity.Types.Boolean,\r\n  },\r\n  isPartTime: {\r\n    type: IKDataEntity.Types.Boolean,\r\n  },\r\n}\r\nconst config = {\r\n  add: function (item) {\r\n    return hillo.postWithUploadFile('Servant.php?op=add', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  edit: function (item) {\r\n    if (item.file) {\r\n      item.imageExt = item.file.name.split('.').lastItem\r\n    }\r\n    return hillo.postWithUploadFile('Servant.php?op=update', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  remove: function (id) {\r\n    return hillo.post('Servant.php?op=delete', { id: id })\r\n  },\r\n  load: async function (filter) {\r\n    return (await hillo.get('Servant.php', { lang: GlobalSettings.getLang(), ...filter }))\r\n      .content\r\n  },\r\n}\r\n\r\nexport default IKDataEntity.ModelFactory(entity, config)\r\n","import { IKDataEntity } from 'metaflow-js'\r\nimport hillo from 'hillo'\r\n\r\nconst entity = {\r\n  id: {\r\n    type: IKDataEntity.Types.Integer,\r\n    displayName: 'id',\r\n    tableConfig: {\r\n      align: 'start',\r\n    },\r\n    form: false,\r\n  },\r\n  name: {\r\n    displayName: 'sectionName',\r\n  },\r\n  isSingleLinePrint: {\r\n    type: IKDataEntity.Types.Boolean,\r\n    displayName: 'isSingleLinePrint',\r\n  },\r\n  isSingleOrderPrint: {\r\n    type: IKDataEntity.Types.Boolean,\r\n    displayName: 'isSingleOrderPrint',\r\n  },\r\n  upsideDown: {\r\n    type: IKDataEntity.Types.Boolean,\r\n  },\r\n  printerCount: {\r\n    displayName: 'printerCount',\r\n    formConfig: {\r\n      inEdit: false,\r\n      inNew: false,\r\n    },\r\n  },\r\n  defaultRetryCount: {\r\n    formConfig: {\r\n      default: '0',\r\n    },\r\n  },\r\n  totalDishesCount: {\r\n    formConfig: {\r\n      inEdit: false,\r\n      inNew: false,\r\n    },\r\n  },\r\n}\r\nconst config = {\r\n  load: async function (filter) {\r\n    return (await hillo.get('Printer.php', {\r\n      op: 'showPrinterGroups',\r\n      ...filter,\r\n    }))\r\n      .content\r\n  },\r\n  add: function (item) {\r\n    return hillo.postWithUploadFile('Printer.php?op=addPrinterGroups', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  edit: function (item) {\r\n    return hillo.postWithUploadFile('Printer.php?op=updatePrinterGroups', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  remove: function (id) {\r\n    return hillo.post('Printer.php?op=deletePrinterGroup', { id: id })\r\n  },\r\n}\r\n\r\nexport default IKDataEntity.ModelFactory(entity, config)\r\n","import GlobalSettings from '@/GlobalSettings'\r\nimport { IKDataEntity } from 'metaflow-js'\r\nimport hillo from 'hillo'\r\nimport Servant from './Servant'\r\nimport store from '@/store'\r\n\r\nconst entity = {\r\n  id: {\r\n    type: IKDataEntity.Types.Integer,\r\n    displayName: 'id',\r\n    tableConfig: {\r\n      align: 'start',\r\n    },\r\n  },\r\n  name: {\r\n    displayName: 'sectionName',\r\n  },\r\n  image: {\r\n    type: IKDataEntity.Types.Image,\r\n    formConfig: {\r\n      type: {\r\n        root: () => store.getters.rootUrl,\r\n      },\r\n      required: false,\r\n    },\r\n    displayName: 'sectionImg',\r\n  },\r\n  servantIds: {\r\n    displayName: 'servantName',\r\n    type: IKDataEntity.Types.Option,\r\n    formConfig: {\r\n      type: {\r\n        selectItems: Servant.getList,\r\n        multiple: true,\r\n      },\r\n    },\r\n  },\r\n  tableCount: {\r\n    form: false,\r\n  },\r\n}\r\nconst config = {\r\n  add: function (item) {\r\n    item.servantIds = JSON.stringify(item.servantIds)\r\n    return hillo.postWithUploadFile('Section.php?op=add', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  edit: function (item) {\r\n    item.servantIds = JSON.stringify(item.servantIds)\r\n    return hillo.postWithUploadFile('Section.php?op=update', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  remove: function (id) {\r\n    return hillo.post('Section.php?op=delete', { id: id })\r\n  },\r\n  load: async function (filter) {\r\n    return (await hillo.get('Section.php', {\r\n      op: 'view',\r\n      lang: GlobalSettings.getLang(),\r\n      ...filter,\r\n    }))\r\n      .content\r\n  },\r\n}\r\n\r\nexport default IKDataEntity.ModelFactory(entity, config)\r\n","import { IKDataEntity } from 'metaflow-js'\r\nimport hillo from 'hillo'\r\n\r\nconst entity = {\r\n  id: {\r\n    type: IKDataEntity.Types.Integer,\r\n    displayName: 'id',\r\n    tableConfig: {\r\n      align: 'start',\r\n    },\r\n  },\r\n  isSticker: {\r\n    displayName: 'isSticker',\r\n  },\r\n  lineLength: {\r\n    displayName: 'lineLength',\r\n  },\r\n  typeDesc: {\r\n    displayName: 'typeDesc',\r\n  },\r\n  typeName: {\r\n    displayName: 'typeName',\r\n  },\r\n}\r\nconst config = {\r\n  load: async function (filter) {\r\n    return (await hillo.get('Printer.php', {\r\n      op: 'showPrinterType',\r\n      ...filter,\r\n    }))\r\n      .content\r\n  },\r\n}\r\n\r\nexport default IKDataEntity.ModelFactory(entity, config)\r\n","import { IKDataEntity } from 'metaflow-js'\r\nimport hillo from 'hillo'\r\nimport PrinterGroup from './PrinterGroup'\r\nimport PrinterType from './PrinterType'\r\nimport Section from './Section'\r\n\r\nconst entity = {\r\n  id: {\r\n    type: IKDataEntity.Types.Integer,\r\n    displayName: 'deviceId',\r\n    tableConfig: {\r\n      align: 'start',\r\n    },\r\n    formConfig: {\r\n      requiredNew: false,\r\n    },\r\n  },\r\n  printerName: {\r\n    displayName: 'printerName',\r\n  },\r\n  printerTypeId: {\r\n    type: IKDataEntity.Types.Option,\r\n    formConfig: {\r\n      type: {\r\n        selectItems: PrinterType.getList,\r\n        itemText: 'typeName',\r\n      },\r\n      requiredEdit: false,\r\n    },\r\n    displayName: 'printerTypeName',\r\n  },\r\n  identity: {\r\n    displayName: 'identity',\r\n    header: false,\r\n    formConfig: {\r\n      inEdit: false,\r\n    },\r\n  },\r\n  sn: {\r\n    displayName: 'sn',\r\n  },\r\n  key: {\r\n    displayName: 'Key',\r\n    formConfig: {\r\n      inEdit: false,\r\n    },\r\n  },\r\n  groupId: {\r\n    type: IKDataEntity.Types.Option,\r\n    formConfig: {\r\n      type: {\r\n        selectItems: PrinterGroup.getList,\r\n        itemText: 'name',\r\n        multiple: true,\r\n      },\r\n      requiredEdit: false,\r\n    },\r\n    displayName: 'groupSecName',\r\n  },\r\n  sectionIds: {\r\n    type: IKDataEntity.Types.Option,\r\n    formConfig: {\r\n      type: {\r\n        selectItems: Section.getList,\r\n        itemText: 'name',\r\n        multiple: true,\r\n      },\r\n      requiredEdit: true,\r\n    },\r\n    displayName: 'sectionName',\r\n\r\n  },\r\n\r\n}\r\nconst config = {\r\n  load: async function (filter) {\r\n    const data = await IKDataEntity.generalLoad('Printer.php', {\r\n      op: 'showAllPrinterStatus',\r\n      ...filter,\r\n    })\r\n    return data.content\r\n  },\r\n  add: function (item) {\r\n    item.groupIds = JSON.stringify(item.groupId)\r\n    item.name = item.printerName\r\n    item.printerSectionID = JSON.stringify(item.sectionIds)\r\n\r\n    return hillo.postWithUploadFile('Printer.php?op=add', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  edit: function (item) {\r\n    item.groupIds = JSON.stringify(item.groupId)\r\n    item.name = item.printerName\r\n    item.printerSectionID = JSON.stringify(item.sectionIds)\r\n\r\n    return hillo.postWithUploadFile('Printer.php?op=edit', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  remove: function (id) {\r\n    return hillo.post('Printer.php?op=remove', { id: id })\r\n  },\r\n}\r\n\r\nexport default IKDataEntity.ModelFactory(entity, config)\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ik-data-table',{attrs:{\"model\":_vm.model,\"entity-name\":_vm.$t('设备列表'),\"icon\":'mdi-devices'}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <ik-data-table\r\n    :model=\"model\"\r\n    :entity-name=\"$t('设备列表')\"\r\n    :icon=\"'mdi-devices'\"\r\n  />\r\n</template>\r\n\r\n<script>\r\n\r\n  import DeviceList from '../../model/DeviceList'\r\n  import { IkDataTable } from 'metaflow-js'\r\n\r\n  export default {\r\n    components: { IkDataTable },\r\n    data: function () {\r\n      return ({\r\n        model: DeviceList,\r\n      })\r\n    },\r\n  }\r\n\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DeviceList.vue?vue&type=template&id=06bae408&\"\nimport script from \"./DeviceList.vue?vue&type=script&lang=js&\"\nexport * from \"./DeviceList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}