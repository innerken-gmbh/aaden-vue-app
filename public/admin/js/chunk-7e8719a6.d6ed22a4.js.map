{"version":3,"sources":["webpack:///./src/model/Category.js","webpack:///./src/views/dishes/LabelsManage.vue?a4e1","webpack:///src/views/dishes/LabelsManage.vue","webpack:///./src/views/dishes/LabelsManage.vue?86a6","webpack:///./src/views/dishes/LabelsManage.vue","webpack:///./src/model/StringEntity.js","webpack:///./src/model/AttributeGroup.js","webpack:///./src/model/CategoryType.js"],"names":["i","Boolean","GlobalSettings","isShowOnTable","colorList","config","add","item","appliedAttributeGroup","attributeGroupId","join","catTypeId","dishesCategoryTypeId","hillo","post","langs","JSON","stringify","showLoading","edit","console","log","postWithUploadFile","remove","id","load","filter","get","response","content","randomColor","list","IKUtils","color","Math","round","random","toast","removeAllColor","removeCategoryImage","categoryId","entity","_langsname","displayName","form","dcImage","type","IKDataEntity","Types","Image","formConfig","required","root","store","getters","rootUrl","dcImageRoot","header","Group","groupName","default","supportLang","childLabelKey","tableConfig","displayCondition","lang","toUpperCase","getLang","displayChild","key","childKey","labelKey","children","StringEntity","Option","selectItems","CategoryType","getList","width","AttributeGroup","multiple","Color","printOrder","Integer","requiredNew","requiredEdit","rule","v","test","categorySort","ModelFactory","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","$t","on","setRandomColor","removeColor","ref","staticStyle","model","reloaded","staticRenderFns","component","VBtn","VCard","VCardTitle","VContainer","align","name","desc","printTitle","multiSelect","attrubuteCount","op"],"mappings":"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","file":"js/chunk-7e8719a6.d6ed22a4.js","sourcesContent":["import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\nimport CategoryType from './CategoryType'\nimport AttributeGroup from './AttributeGroup'\nimport StringEntity from './StringEntity'\nimport GlobalSettings from '@/GlobalSettings'\n// import ParentCategoty from './ParentCategoty'\nimport IKUtils from 'innerken-js-utils'\nimport store from '../store'\n\nconst i = Boolean(GlobalSettings.isShowOnTable === '0')\n\nconst colorList = ['#FFCDD2', '#F8BBD0', '#E1BEE7',\n                    '#D1C4E9', '#C5CAE9', '#BBDEFB',\n                    '#B3E5FC', '#B2EBF2', '#B2DFDB',\n                    '#C8E6C9', '#DCEDC8', '#F0F4C3',\n                    '#FFF9C4', '#FFECB3', '#FFE0B2',\n                    '#FFCCBC', '#D7CCC8', '#CFD8DC']\n\nconst config = {\n\n  add: function (item) {\n    item.appliedAttributeGroup = item.attributeGroupId.join(',')\n    item.catTypeId = item.dishesCategoryTypeId\n    return hillo.post('Category.php?op=add', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    item.appliedAttributeGroup = item.attributeGroupId.join(',')\n    item.catTypeId = item.dishesCategoryTypeId\n\n    console.log('label-manage: item()', item)\n    return hillo.postWithUploadFile('Category.php?op=update', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Category.php?op=delete', { id: id })\n  },\n  load: async function (filter) {\n    const response = (await hillo.get('Category.php', filter)).content\n    console.log(response, 'cate response')\n    return response\n  },\n  randomColor: async function (list) {\n    IKUtils.showLoading(true)\n    for (const item of list) {\n      item.appliedAttributeGroup = item.attributeGroupId.join(',')\n      item.catTypeId = item.dishesCategoryTypeId\n\n      item.color = colorList[Math.round(Math.random() * 18)]\n\n      await hillo.postWithUploadFile('Category.php?op=update', {\n        ...item,\n        langs: JSON.stringify(item.langs),\n      }, {\n        showLoading: false,\n      })\n    }\n    IKUtils.toast('OK')\n  },\n\n  removeAllColor: async function (list) {\n    IKUtils.showLoading(true)\n    for (const item of list) {\n      item.appliedAttributeGroup = item.attributeGroupId.join(',')\n      item.catTypeId = item.dishesCategoryTypeId\n\n      item.color = '#FFFFFF'\n      hillo.postWithUploadFile('Category.php?op=update', {\n        ...item,\n        langs: JSON.stringify(item.langs),\n      }, {\n        showLoading: false,\n      })\n    }\n    IKUtils.toast('OK')\n  },\n\n  removeCategoryImage: async function (categoryId) {\n    await hillo.post('Category.php?op=removeCategoryImage', {\n      ...categoryId,\n    }, {\n        showLoading: true,\n    })\n  },\n\n}\n\nconst entity = {\n  // id: {\n  //   type: IKDataEntity.Types.Integer,\n  //   displayName: 'id',\n  //   tableConfig: {\n  //     align: 'start',\n  //   },\n  //   formConfig: {\n  //     requiredNew: false,\n  //   },\n  //   header: false,\n  // },\n  _langsname: {\n    displayName: 'KategorieName',\n    form: false,\n  },\n  dcImage: {\n    type: IKDataEntity.Types.Image,\n    formConfig: {\n      required: false,\n      type: {\n        root: () => store.getters.rootUrl + GlobalSettings.dcImageRoot,\n      },\n    },\n    displayName: 'image',\n    header: i,\n  },\n  langs: {\n    displayName: 'labelName',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'labelName',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toUpperCase() === GlobalSettings.getLang().toUpperCase()\n      },\n      displayChild: (key) => {\n        console.log(key)\n        return key === 'name'\n      },\n    },\n    childKey: ['name', 'desc'],\n    labelKey: 'lang',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n    header: false,\n  },\n  dishesCategoryTypeId: {\n    displayName: 'warengruppe',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: CategoryType.getList,\n      },\n    },\n  },\n  attributeGroupId: {\n    displayName: 'attributeGroupNames',\n    type: IKDataEntity.Types.Option,\n    tableConfig: {\n      width: '100px',\n    },\n    formConfig: {\n      required: false,\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n      },\n    },\n  },\n  // parentId: {\n  //   type: IKDataEntity.Types.Option,\n  //   // displayName: '',\n  //   formConfig: {\n  //     required: false,\n  //     type: {\n  //       selectItems: ParentCategoty.getList,\n  //       itemText: '_langsname',\n  //     },\n  //   },\n  //   header: false,\n  // },\n\n  color: {\n    type: IKDataEntity.Types.Color,\n    formConfig: {\n      required: false,\n    },\n  },\n\n  printOrder: {\n    type: IKDataEntity.Types.Integer,\n    required: false,\n    formConfig: {\n      default: 50,\n      requiredNew: false,\n      requiredEdit: false,\n      rule: [ // ^-[1-9]\\d*$\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die ganze Zahl ein',\n      ],\n    },\n  },\n  categorySort: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'sectionSort',\n    formConfig: {\n      required: true,\n    },\n  },\n\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n// export const Category = IKDataEntity.ModelFactory(entity, config)\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"fill-height align-start\",attrs:{\"id\":\"data-tables\",\"fluid\":\"\",\"tag\":\"section\"}},[_c('v-card',{staticClass:\"d-flex justify-space-between align-center\",attrs:{\"width\":\"100%\",\"height\":\"60px\",\"flat\":\"\"}},[_c('v-card-title',[_c('h5',[_vm._v(_vm._s(_vm.$t('批量修改标签颜色')))])]),_c('div',[_c('v-btn',{staticClass:\"primary\",on:{\"click\":_vm.setRandomColor}},[_vm._v(\" \"+_vm._s(_vm.$t('随机设置标签颜色'))+\" \")]),_c('v-btn',{staticClass:\"red\",on:{\"click\":_vm.removeColor}},[_vm._v(\" \"+_vm._s(_vm.$t('消除所有标签颜色'))+\" \")])],1)],1),_c('ik-data-table',{ref:\"table\",staticStyle:{\"width\":\"100%\"},attrs:{\"model\":_vm.model,\"entity-name\":_vm.$t('分类'),\"icon\":\"mdi-label\"},on:{\"reloaded\":_vm.reloaded}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container\n    id=\"data-tables\"\n    class=\"fill-height align-start\"\n    fluid\n    tag=\"section\"\n  >\n    <v-card\n      width=\"100%\"\n      height=\"60px\"\n      class=\"d-flex justify-space-between align-center\"\n      flat\n    >\n      <v-card-title>\n        <h5>{{ $t('批量修改标签颜色') }}</h5>\n      </v-card-title>\n      <div>\n        <v-btn\n          class=\"primary\"\n          @click=\"setRandomColor\"\n        >\n          {{ $t('随机设置标签颜色') }}\n        </v-btn>\n\n        <v-btn\n          class=\"red\"\n          @click=\"removeColor\"\n        >\n          {{ $t('消除所有标签颜色') }}\n        </v-btn>\n      </div>\n    </v-card>\n    <ik-data-table\n      ref=\"table\"\n      :model=\"model\"\n      :entity-name=\"$t('分类')\"\n      icon=\"mdi-label\"\n      style=\"width: 100%\"\n      @reloaded=\"reloaded\"\n    />\n  </v-container>\n</template>\n\n<script>\n  import { IkDataTable } from 'metaflow-js'\n  import Category from '../../model/Category'\n\n  export default {\n    components: {\n      IkDataTable,\n    },\n    data: function () {\n      return ({\n        model: Category,\n        response: null,\n      })\n    },\n\n    async mounted () {\n\n    },\n    methods: {\n      reloaded () {\n        // this.$refs.table.reload()\n        // console.log('reloaded')\n      },\n      async setRandomColor () {\n        console.log(this.response, 'this.responese set')\n        this.model.randomColor(await this.model.getList())\n      },\n      async removeColor () {\n        console.log(this.response, 'this.responese remove')\n        this.model.removeAllColor(await this.model.getList())\n      },\n    },\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LabelsManage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LabelsManage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LabelsManage.vue?vue&type=template&id=1044a9c6&\"\nimport script from \"./LabelsManage.vue?vue&type=script&lang=js&\"\nexport * from \"./LabelsManage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardTitle,VContainer})\n","import { IKDataEntity } from 'metaflow-js'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {\n    displayName: 'Name',\n  },\n  lang: {},\n  desc: {\n    displayName: 'Beschreibung',\n    formConfig: {\n      required: false,\n    },\n  },\n}\nexport default IKDataEntity.ModelFactory(entity, {})\n","import GlobalSettings from '@/GlobalSettings'\n\nimport { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  name: {},\n  printTitle: {},\n  required: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  multiSelect: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  attrubuteCount: {\n    type: IKDataEntity.Types.Integer,\n    form: false,\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Category.php', {\n      op: 'showAttributeGroup',\n      lang: GlobalSettings.getLang(),\n      ...filter,\n    }))\n      .content\n  },\n  add: function (item) {\n    return hillo.postWithUploadFile('Category.php?op=addAttributeGroup', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Category.php?op=updateAttributeGroup', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Category.php?op=deleteAttributeGroup', { id: id })\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import GlobalSettings from '@/GlobalSettings'\nimport { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {},\n  lang: {},\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('CategoryType.php', {\n      lang: GlobalSettings.getLang(),\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n"],"sourceRoot":""}