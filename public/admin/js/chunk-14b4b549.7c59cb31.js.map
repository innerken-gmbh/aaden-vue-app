{"version":3,"sources":["webpack:///./src/model/Servant.js","webpack:///./src/model/PrinterGroup.js","webpack:///./src/model/Section.js","webpack:///./src/model/PrinterType.js","webpack:///./src/model/DeviceList.js","webpack:///./src/views/Printer/DeviceList.vue?3214","webpack:///src/views/Printer/DeviceList.vue","webpack:///./src/views/Printer/DeviceList.vue?3ef6","webpack:///./src/views/Printer/DeviceList.vue"],"names":["entity","id","type","IKDataEntity","Types","Integer","displayName","tableConfig","align","form","photo","Image","formConfig","root","store","getters","rootUrl","GlobalSettings","servantRoot","requiredEdit","requiredNew","md","header","name","password","permission","Boolean","isPartTime","config","add","item","hillo","postWithUploadFile","showLoading","edit","file","imageExt","split","lastItem","remove","post","load","filter","get","lang","getLang","content","ModelFactory","isSingleLinePrint","isSingleOrderPrint","upsideDown","printerCount","inEdit","inNew","defaultRetryCount","default","totalDishesCount","op","image","required","servantIds","Option","selectItems","Servant","getList","multiple","tableCount","JSON","stringify","isSticker","lineLength","typeDesc","typeName","printerName","printerTypeId","PrinterType","itemText","identity","sn","key","groupId","PrinterGroup","sectionIds","Section","generalLoad","data","groupIds","printerSectionID","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","model","$t","staticRenderFns","component","VContainer"],"mappings":"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","file":"js/chunk-14b4b549.7c59cb31.js","sourcesContent":["import GlobalSettings from '@/GlobalSettings'\nimport store from '../store'\nimport { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  photo: {\n    displayName: 'image',\n    type: IKDataEntity.Types.Image,\n    formConfig: {\n      type: {\n        root: () => store.getters.rootUrl + GlobalSettings.servantRoot,\n      },\n      requiredEdit: false,\n      requiredNew: false,\n      md: 12,\n    },\n    header: false,\n  },\n  name: {\n    displayName: 'servantName',\n  },\n  password: {\n  },\n  permission: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  isPartTime: {\n    type: IKDataEntity.Types.Boolean,\n  },\n}\nconst config = {\n  add: function (item) {\n    return hillo.postWithUploadFile('Servant.php?op=add', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    if (item.file) {\n      item.imageExt = item.file.name.split('.').lastItem\n    }\n    return hillo.postWithUploadFile('Servant.php?op=update', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Servant.php?op=delete', { id: id })\n  },\n  load: async function (filter) {\n    return (await hillo.get('Servant.php', { lang: GlobalSettings.getLang(), ...filter }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  name: {\n    displayName: 'sectionName',\n  },\n  isSingleLinePrint: {\n    type: IKDataEntity.Types.Boolean,\n    displayName: 'isSingleLinePrint',\n  },\n  isSingleOrderPrint: {\n    type: IKDataEntity.Types.Boolean,\n    displayName: 'isSingleOrderPrint',\n  },\n  upsideDown: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  printerCount: {\n    displayName: 'printerCount',\n    formConfig: {\n      inEdit: false,\n      inNew: false,\n    },\n  },\n  defaultRetryCount: {\n    formConfig: {\n      default: '0',\n    },\n  },\n  totalDishesCount: {\n    formConfig: {\n      inEdit: false,\n      inNew: false,\n    },\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Printer.php', {\n      op: 'showPrinterGroups',\n      ...filter,\n    }))\n      .content\n  },\n  add: function (item) {\n    return hillo.postWithUploadFile('Printer.php?op=addPrinterGroups', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Printer.php?op=updatePrinterGroups', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Printer.php?op=deletePrinterGroup', { id: id })\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import GlobalSettings from '@/GlobalSettings'\nimport { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\nimport Servant from './Servant'\nimport store from '@/store'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n  },\n  name: {\n    displayName: 'sectionName',\n  },\n  image: {\n    type: IKDataEntity.Types.Image,\n    formConfig: {\n      type: {\n        root: () => store.getters.rootUrl,\n      },\n      required: false,\n    },\n    displayName: 'sectionImg',\n  },\n  servantIds: {\n    displayName: 'servantName',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Servant.getList,\n        multiple: true,\n      },\n    },\n  },\n  tableCount: {\n    form: false,\n  },\n}\nconst config = {\n  add: function (item) {\n    item.servantIds = JSON.stringify(item.servantIds)\n    return hillo.postWithUploadFile('Section.php?op=add', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    item.servantIds = JSON.stringify(item.servantIds)\n    return hillo.postWithUploadFile('Section.php?op=update', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Section.php?op=delete', { id: id })\n  },\n  load: async function (filter) {\n    return (await hillo.get('Section.php', {\n      op: 'view',\n      lang: GlobalSettings.getLang(),\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n  },\n  isSticker: {\n    displayName: 'isSticker',\n  },\n  lineLength: {\n    displayName: 'lineLength',\n  },\n  typeDesc: {\n    displayName: 'typeDesc',\n  },\n  typeName: {\n    displayName: 'typeName',\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Printer.php', {\n      op: 'showPrinterType',\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'metaflow-js'\nimport hillo from 'hillo'\nimport PrinterGroup from './PrinterGroup'\nimport PrinterType from './PrinterType'\nimport Section from './Section'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'deviceId',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  printerName: {\n    displayName: 'printerName',\n  },\n  printerTypeId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: PrinterType.getList,\n        itemText: 'typeName',\n      },\n      requiredEdit: false,\n    },\n    displayName: 'printerTypeName',\n  },\n  identity: {\n    displayName: 'identity',\n    header: false,\n    formConfig: {\n      inEdit: false,\n    },\n  },\n  sn: {\n    displayName: 'sn',\n  },\n  key: {\n    displayName: 'Key',\n    formConfig: {\n      inEdit: false,\n    },\n  },\n  groupId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: PrinterGroup.getList,\n        itemText: 'name',\n        multiple: true,\n      },\n      requiredEdit: false,\n    },\n    displayName: 'groupSecName',\n  },\n  sectionIds: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Section.getList,\n        itemText: 'name',\n        multiple: true,\n      },\n      requiredEdit: true,\n    },\n    displayName: 'sectionName',\n\n  },\n\n}\nconst config = {\n  load: async function (filter) {\n    const data = await IKDataEntity.generalLoad('Printer.php', {\n      op: 'showAllPrinterStatus',\n      ...filter,\n    })\n    return data.content\n  },\n  add: function (item) {\n    item.groupIds = JSON.stringify(item.groupId)\n    item.name = item.printerName\n    item.printerSectionID = JSON.stringify(item.sectionIds)\n\n    return hillo.postWithUploadFile('Printer.php?op=add', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    item.groupIds = JSON.stringify(item.groupId)\n    item.name = item.printerName\n    item.printerSectionID = JSON.stringify(item.sectionIds)\n\n    return hillo.postWithUploadFile('Printer.php?op=edit', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Printer.php?op=remove', { id: id })\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"fill-height align-start\",attrs:{\"id\":\"data-tables\",\"fluid\":\"\",\"tag\":\"section\"}},[_c('ik-data-table',{attrs:{\"model\":_vm.model,\"entity-name\":_vm.$t('设备列表'),\"icon\":'mdi-devices'}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container\n    id=\"data-tables\"\n    class=\"fill-height align-start\"\n    fluid\n    tag=\"section\"\n  >\n    <ik-data-table\n      :model=\"model\"\n      :entity-name=\"$t('设备列表')\"\n      :icon=\"'mdi-devices'\"\n    />\n  </v-container>\n</template>\n\n<script>\n\n  import DeviceList from '../../model/DeviceList'\n  import { IkDataTable } from 'metaflow-js'\n\n  export default {\n    components: { IkDataTable },\n    data: function () {\n      return ({\n        model: DeviceList,\n      })\n    },\n  }\n\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DeviceList.vue?vue&type=template&id=22ceb83a&\"\nimport script from \"./DeviceList.vue?vue&type=script&lang=js&\"\nexport * from \"./DeviceList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer})\n"],"sourceRoot":""}