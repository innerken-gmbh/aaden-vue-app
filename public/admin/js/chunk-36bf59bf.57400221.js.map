{"version":3,"sources":["webpack:///./src/model/Payment.js","webpack:///./src/model/StringEntity.js","webpack:///./src/model/ConsumeTypeStatus.js"],"names":["entity","id","type","IKDataEntity","Types","Integer","displayName","tableConfig","align","formConfig","requiredNew","langs","Group","groupName","default","GlobalSettings","supportLang","childLabelKey","displayCondition","item","lang","toUpperCase","childKey","children","StringEntity","fixedDisplay","Boolean","isOnline","apiKey","required","requiredEdit","config","add","hillo","post","JSON","stringify","showLoading","edit","postWithUploadFile","remove","load","filter","get","content","ModelFactory","name","desc","labelKey","op"],"mappings":"0LAIMA,EAAS,CACbC,GAAI,CACFC,KAAMC,kBAAaC,MAAMC,QACzBC,YAAa,KACbC,YAAa,CACXC,MAAO,SAETC,WAAY,CACVC,aAAa,IAGjBC,MAAO,CACLL,YAAa,cACbJ,KAAMC,kBAAaC,MAAMQ,MACzBH,WAAY,CACVI,UAAW,cACXC,QAASC,OAAeC,YACxBC,cAAe,OACff,KAAM,IAERK,YAAa,CACXW,iBAAkB,SAACC,GACjB,OAAOA,EAAKC,KAAKC,gBAAkBN,OAAeK,SAGtDE,SAAU,OACVC,SAAU,CACRC,OAAcA,OAAcA,SAGhCC,aAAc,CACZvB,KAAMC,kBAAaC,MAAMsB,SAE3BC,SAAU,CACRrB,YAAa,WACbJ,KAAMC,kBAAaC,MAAMsB,SAE3BE,OAAQ,CACNC,UAAU,EACVpB,WAAY,CACVC,aAAa,EACboB,cAAc,KAIdC,EAAS,CACbC,IAAK,SAAUb,GACb,OAAOc,WAAMC,KAAK,uBAAX,iCACFf,GADE,IAELR,MAAOwB,KAAKC,UAAUjB,EAAKR,SAC1B,CACD0B,aAAa,KAGjBC,KAAM,SAAUnB,GACd,OAAOc,WAAMM,mBAAmB,0BAAzB,iCACFpB,GADE,IAELR,MAAOwB,KAAKC,UAAUjB,EAAKR,SAC1B,CACD0B,aAAa,KAGjBG,OAAQ,SAAUvC,GAChB,OAAOgC,WAAMC,KAAK,0BAA2B,CAAEjC,GAAIA,KAErDwC,KAAM,WAAF,8CAAE,WAAgBC,GAAhB,iGACUT,WAAMU,IAAI,gBAAV,kBACTD,IAFD,uCAGAE,SAHA,2CAAF,sDAAE,IAOOzC,yBAAa0C,aAAa7C,EAAQ+B,I,kCC5EjD,gBAEM/B,EAAS,CACbC,GAAI,CACFC,KAAMC,kBAAaC,MAAMC,QACzBC,YAAa,KACbC,YAAa,CACXC,MAAO,SAETC,WAAY,CACVC,aAAa,IAGjBoC,KAAM,CACJxC,YAAa,QAEfc,KAAM,GACN2B,KAAM,CACJzC,YAAa,eACbG,WAAY,CACVoB,UAAU,KAID1B,yBAAa0C,aAAa7C,EAAQ,K,8GCnB3CA,EAAS,CACbC,GAAI,CACFC,KAAMC,kBAAaC,MAAMC,QACzBC,YAAa,KACbC,YAAa,CACXC,MAAO,SAETC,WAAY,CACVC,aAAa,IAGjBC,MAAO,CACLL,YAAa,wBACbJ,KAAMC,kBAAaC,MAAMQ,MACzBH,WAAY,CACVI,UAAW,wBACXC,QAASC,OAAeC,YACxBC,cAAe,OACff,KAAM,IAERK,YAAa,CACXW,iBAAkB,SAACC,GACjB,OAAOA,EAAKC,KAAKC,gBAAkBN,OAAeK,SAGtDE,SAAU,OACV0B,SAAU,OACVzB,SAAU,CACRC,OAAcA,OAAcA,SAGhCsB,KAAM,CACJxC,YAAa,sBAGXyB,EAAS,CACbU,KAAM,WAAF,8CAAE,WAAgBC,GAAhB,iGACUT,WAAMU,IAAI,aAAV,gBACZM,GAAI,6BAEDP,IAJD,uCAMDE,SANC,2CAAF,sDAAE,IAUOzC,yBAAa0C,aAAa7C,EAAQ+B","file":"js/chunk-36bf59bf.57400221.js","sourcesContent":["import { hillo, IKDataEntity } from 'innerken-utils'\nimport StringEntity from './StringEntity'\nimport GlobalSettings from '../components/Settings/GlobalSettings'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  langs: {\n    displayName: 'paymentname',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'paymentname',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toUpperCase() === GlobalSettings.lang()\n      },\n    },\n    childKey: 'name',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n  },\n  fixedDisplay: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  isOnline: {\n    displayName: 'isOnline',\n    type: IKDataEntity.Types.Boolean,\n  },\n  apiKey: {\n    required: false,\n    formConfig: {\n      requiredNew: false,\n      requiredEdit: false,\n    },\n  },\n}\nconst config = {\n  add: function (item) {\n    return hillo.post('PayMethod.php?op=add', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('PayMethod.php?op=update', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('PayMethod.php?op=delete', { id: id })\n  },\n  load: async function (filter) {\n    return (await hillo.get('PayMethod.php', {\n      ...filter,\n    })).content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'innerken-utils'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {\n    displayName: 'Name',\n  },\n  lang: {},\n  desc: {\n    displayName: 'Beschreibung',\n    formConfig: {\n      required: false,\n    },\n  },\n}\nexport default IKDataEntity.ModelFactory(entity, {})\n","// import GlobalSettings from '../components/Settings/GlobalSettings'\nimport { hillo, IKDataEntity } from 'innerken-utils'\nimport GlobalSettings from '../components/Settings/GlobalSettings'\nimport StringEntity from './StringEntity'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  langs: {\n    displayName: 'consumeTypeStatusName',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'consumeTypeStatusName',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toUpperCase() === GlobalSettings.lang()\n      },\n    },\n    childKey: 'name',\n    labelKey: 'lang',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n  },\n  name: {\n    displayName: 'consumeTypeStatus',\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Orders.php', {\n      op: 'showConsumeTypeStatusList',\n      // lang: GlobalSettings.lang(),\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n"],"sourceRoot":""}