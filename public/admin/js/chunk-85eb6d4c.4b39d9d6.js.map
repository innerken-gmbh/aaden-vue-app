{"version":3,"sources":["webpack:///./src/model/Servant.js","webpack:///./src/model/Section.js","webpack:///./src/views/Tables/SectionManage.vue?e08e","webpack:///src/views/Tables/SectionManage.vue","webpack:///./src/views/Tables/SectionManage.vue?fa8d","webpack:///./src/views/Tables/SectionManage.vue"],"names":["entity","id","type","IKDataEntity","Types","Integer","displayName","tableConfig","align","form","photo","Image","formConfig","root","store","getters","rootUrl","GlobalSettings","servantRoot","requiredEdit","requiredNew","md","header","name","password","permission","Boolean","isPartTime","config","add","item","hillo","postWithUploadFile","showLoading","edit","file","imageExt","split","lastItem","remove","post","load","filter","get","lang","getLang","content","ModelFactory","image","required","servantIds","Option","selectItems","Servant","getList","multiple","tableCount","JSON","stringify","op","render","_vm","this","_h","$createElement","_c","_self","attrs","model","$t","staticRenderFns","component"],"mappings":"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","file":"js/chunk-85eb6d4c.4b39d9d6.js","sourcesContent":["import GlobalSettings from '@/GlobalSettings'\r\nimport store from '../store'\r\nimport { IKDataEntity } from 'metaflow-js'\r\nimport hillo from 'hillo'\r\n\r\nconst entity = {\r\n  id: {\r\n    type: IKDataEntity.Types.Integer,\r\n    displayName: 'id',\r\n    tableConfig: {\r\n      align: 'start',\r\n    },\r\n    form: false,\r\n  },\r\n  photo: {\r\n    displayName: 'image',\r\n    type: IKDataEntity.Types.Image,\r\n    formConfig: {\r\n      type: {\r\n        root: () => store.getters.rootUrl + GlobalSettings.servantRoot,\r\n      },\r\n      requiredEdit: false,\r\n      requiredNew: false,\r\n      md: 12,\r\n    },\r\n    header: false,\r\n  },\r\n  name: {\r\n    displayName: 'servantName',\r\n  },\r\n  password: {\r\n  },\r\n  permission: {\r\n    type: IKDataEntity.Types.Boolean,\r\n  },\r\n  isPartTime: {\r\n    type: IKDataEntity.Types.Boolean,\r\n  },\r\n}\r\nconst config = {\r\n  add: function (item) {\r\n    return hillo.postWithUploadFile('Servant.php?op=add', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  edit: function (item) {\r\n    if (item.file) {\r\n      item.imageExt = item.file.name.split('.').lastItem\r\n    }\r\n    return hillo.postWithUploadFile('Servant.php?op=update', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  remove: function (id) {\r\n    return hillo.post('Servant.php?op=delete', { id: id })\r\n  },\r\n  load: async function (filter) {\r\n    return (await hillo.get('Servant.php', { lang: GlobalSettings.getLang(), ...filter }))\r\n      .content\r\n  },\r\n}\r\n\r\nexport default IKDataEntity.ModelFactory(entity, config)\r\n","import GlobalSettings from '@/GlobalSettings'\r\nimport { IKDataEntity } from 'metaflow-js'\r\nimport hillo from 'hillo'\r\nimport Servant from './Servant'\r\nimport store from '@/store'\r\n\r\nconst entity = {\r\n  id: {\r\n    type: IKDataEntity.Types.Integer,\r\n    displayName: 'id',\r\n    tableConfig: {\r\n      align: 'start',\r\n    },\r\n  },\r\n  name: {\r\n    displayName: 'sectionName',\r\n  },\r\n  image: {\r\n    type: IKDataEntity.Types.Image,\r\n    formConfig: {\r\n      type: {\r\n        root: () => store.getters.rootUrl,\r\n      },\r\n      required: false,\r\n    },\r\n    displayName: 'sectionImg',\r\n  },\r\n  servantIds: {\r\n    displayName: 'servantName',\r\n    type: IKDataEntity.Types.Option,\r\n    formConfig: {\r\n      type: {\r\n        selectItems: Servant.getList,\r\n        multiple: true,\r\n      },\r\n    },\r\n  },\r\n  tableCount: {\r\n    form: false,\r\n  },\r\n}\r\nconst config = {\r\n  add: function (item) {\r\n    item.servantIds = JSON.stringify(item.servantIds)\r\n    return hillo.postWithUploadFile('Section.php?op=add', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  edit: function (item) {\r\n    item.servantIds = JSON.stringify(item.servantIds)\r\n    return hillo.postWithUploadFile('Section.php?op=update', item, {\r\n      showLoading: true,\r\n    })\r\n  },\r\n  remove: function (id) {\r\n    return hillo.post('Section.php?op=delete', { id: id })\r\n  },\r\n  load: async function (filter) {\r\n    return (await hillo.get('Section.php', {\r\n      op: 'view',\r\n      lang: GlobalSettings.getLang(),\r\n      ...filter,\r\n    }))\r\n      .content\r\n  },\r\n}\r\n\r\nexport default IKDataEntity.ModelFactory(entity, config)\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ik-data-table',{attrs:{\"model\":_vm.model,\"icon\":\"mdi-desktop-tower-monitor\",\"entity-name\":_vm.$t('分区')}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <ik-data-table\r\n    :model=\"model\"\r\n    icon=\"mdi-desktop-tower-monitor\"\r\n    :entity-name=\"$t('分区')\"\r\n  />\r\n</template>\r\n\r\n<script>\r\n\r\n  import Section from '../../model/Section'\r\n  import Servant from '../../model/Servant'\r\n  import IKUtils from 'innerken-js-utils'\r\n  import { IkDataTable } from 'metaflow-js'\r\n  import hillo from 'hillo'\r\n\r\n  export default {\r\n    components: {\r\n      IkDataTable,\r\n    },\r\n    data: function () {\r\n      return ({\r\n        model: Section,\r\n        displayData: [],\r\n        loading: false,\r\n        fixedHeader: [\r\n          {\r\n            text: 'Name',\r\n            value: 'name',\r\n          },\r\n          {\r\n            text: 'Password',\r\n            value: 'password',\r\n          },\r\n        ],\r\n        sectionHeaders: [],\r\n      })\r\n    },\r\n    computed: {\r\n      headers () {\r\n        return this.fixedHeader.concat(this.sectionHeaders)\r\n      },\r\n      tableData () {\r\n        const tableData = []\r\n        this.displayData.forEach(d => {\r\n          this.sectionHeaders.forEach(s => {\r\n            s.copyServantsIds = IKUtils.deepCopy(s.servantIds)\r\n            if (d.id) {\r\n              if ((s.servantIds !== null) && (s.servantIds.length > 0)) {\r\n                d[s.name] = (s.servantIds.indexOf(d.id) > -1)\r\n              } else {\r\n                d[s.name] = false\r\n              }\r\n            }\r\n          })\r\n          tableData.push(d)\r\n        })\r\n        console.log(tableData, 'item')\r\n        return tableData\r\n      },\r\n    },\r\n    mounted () {\r\n      this.loadData()\r\n    },\r\n    methods: {\r\n      async updateSection (item, sItem) {\r\n        this.loading = false\r\n        item[sItem.name] = !item[sItem.name]\r\n        if (typeof (sItem.copyServantsIds) === 'string') {\r\n          sItem.copyServantsIds = JSON.parse(sItem.copyServantsIds)\r\n        }\r\n        if (item[sItem.name]) {\r\n          sItem.copyServantsIds.push(item.id)\r\n        } else {\r\n          sItem.copyServantsIds.splice(sItem.copyServantsIds.indexOf(item.id), 1)\r\n        }\r\n        sItem.servantIds = JSON.stringify(sItem.copyServantsIds)\r\n        await hillo.post('Section.php?op=update', sItem)\r\n        // try {\r\n        //   await hillo.post('Section.php?op=update', sItem)\r\n        //   item[sItem.name] = !item[sItem.name]\r\n        //   this.loading = false\r\n        // } catch (e) {\r\n        //   console.log(e, 'e')\r\n        //   this.loading = false\r\n        // }\r\n        // this.loadData()\r\n      },\r\n      async loadData () {\r\n        this.sectionHeaders = (await Section.getList()).map(a => {\r\n          a.text = a.name\r\n          a.value = a.name\r\n          return a\r\n        })\r\n        this.displayData = (await Servant.getList())\r\n      },\r\n    },\r\n  }\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SectionManage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SectionManage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SectionManage.vue?vue&type=template&id=69c03d0e&\"\nimport script from \"./SectionManage.vue?vue&type=script&lang=js&\"\nexport * from \"./SectionManage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}