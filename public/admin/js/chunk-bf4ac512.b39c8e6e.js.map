{"version":3,"sources":["webpack:///./src/model/ParentCategoty.js","webpack:///./src/model/Category.js","webpack:///./src/model/PrinterGroup.js","webpack:///./src/model/Allergen.js","webpack:///./src/model/ConsumeType.js","webpack:///./src/model/StringEntity.js","webpack:///./src/model/AttributeGroup.js","webpack:///./src/model/Dish.js","webpack:///./src/views/dishes/BuffetChildSetting.vue?af2a","webpack:///./src/model/BuffetChild.js","webpack:///./src/model/BuffetSetting.js","webpack:///src/views/dishes/BuffetChildSetting.vue","webpack:///./src/views/dishes/BuffetChildSetting.vue?e7cf","webpack:///./src/views/dishes/BuffetChildSetting.vue","webpack:///./src/model/CategoryType.js"],"names":["config","load","filter","hillo","get","content","entity","id","type","IKDataEntity","Types","Integer","displayName","tableConfig","align","formConfig","requiredNew","_langsname","form","langs","Group","groupName","default","GlobalSettings","supportLang","childLabelKey","displayCondition","item","lang","toUpperCase","displayChild","key","childKey","labelKey","children","StringEntity","header","ModelFactory","add","appliedAttributeGroup","attributeGroupId","join","catTypeId","dishesCategoryTypeId","appliedConsumeTypeIds","consumeTypeIds","appliedFreeInConsumeTypeIds","freeInConsumeTypeIds","post","JSON","stringify","showLoading","edit","postWithUploadFile","remove","categorySort","required","Option","selectItems","CategoryType","getList","AttributeGroup","multiple","ConsumeType","color","Color","printOrder","requiredEdit","rule","v","test","parentId","ParentCategoty","itemText","name","isSingleLinePrint","Boolean","isSingleOrderPrint","printerCount","inEdit","inNew","defaultRetryCount","totalDishesCount","op","icon","shortName","displayText","printName","zbonGroup","desc","printTitle","multiSelect","i","isShowOnTable","code","image","Image","root","store","getters","rootUrl","dishImageRoot","dishName","price","Float","overwriteRule","printGroupId","PrinterGroup","categoryId","Category","AllergenId","Allergen","merge","disabledItem","editedItem","inheritAttributeGroupId","disabled","includes","localAttributeGroupId","dishWeight","isActive","dishAlias","printText","attributeGroup","allergenGroup","params","file","imageExt","split","map","dishId","flat","description","DishModel","getBuffet","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","$t","BuffetChild","BuffetSetting","staticRenderFns","disableNew","disableEdit","childDishId","Dish","adultDishId","consumeTypeId","totalRound","roundTime","maxDineTime","roundDishCount","childRoundDishCount","component","VCol","VContainer","VRow"],"mappings":"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","file":"js/chunk-bf4ac512.b39c8e6e.js","sourcesContent":["import { hillo, IKDataEntity } from 'innerken-utils'\nimport StringEntity from './StringEntity'\nimport GlobalSettings from '../components/Settings/GlobalSettings'\n\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Category.php', {\n      ...filter,\n    })).content\n  },\n}\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  _langsname: {\n    displayName: 'labelName',\n    form: false,\n  },\n  langs: {\n    displayName: 'labelName',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'labelName',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toUpperCase() === GlobalSettings.lang()\n      },\n      displayChild: (key) => {\n        return key === 'name'\n      },\n    },\n    childKey: ['name', 'desc'],\n    labelKey: 'lang',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n    header: false,\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { hillo, IKDataEntity } from 'innerken-utils'\nimport CategoryType from './CategoryType'\nimport AttributeGroup from './AttributeGroup'\nimport StringEntity from './StringEntity'\nimport GlobalSettings from '../components/Settings/GlobalSettings'\nimport ConsumeType from './ConsumeType'\nimport ParentCategoty from './ParentCategoty'\n\nconst config = {\n  add: function (item) {\n    item.appliedAttributeGroup = item.attributeGroupId.join(',')\n    item.catTypeId = item.dishesCategoryTypeId\n    item.appliedConsumeTypeIds = item.consumeTypeIds.join(',')\n    item.appliedFreeInConsumeTypeIds = item.freeInConsumeTypeIds.join(',')\n    return hillo.post('Category.php?op=add', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    item.appliedAttributeGroup = item.attributeGroupId.join(',')\n    item.catTypeId = item.dishesCategoryTypeId\n    item.appliedConsumeTypeIds = item.consumeTypeIds.join(',')\n    item.appliedFreeInConsumeTypeIds = item.freeInConsumeTypeIds.join(',')\n    return hillo.postWithUploadFile('Category.php?op=update', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Category.php?op=delete', { id: id })\n  },\n  load: async function (filter) {\n    return (await hillo.get('Category.php', {\n      ...filter,\n    })).content\n  },\n}\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  categorySort: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'sectionSort',\n    formConfig: {\n      default: 50,\n      required: false,\n    },\n  },\n  _langsname: {\n    displayName: 'labelName',\n    form: false,\n  },\n  langs: {\n    displayName: 'labelName',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'labelName',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toUpperCase() === GlobalSettings.lang()\n      },\n      displayChild: (key) => {\n        return key === 'name'\n      },\n    },\n    childKey: ['name', 'desc'],\n    labelKey: 'lang',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n    header: false,\n  },\n  dishesCategoryTypeId: {\n    displayName: 'labelType',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: CategoryType.getList,\n      },\n    },\n  },\n  attributeGroupId: {\n    displayName: 'attributeGroupNames',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      required: false,\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n      },\n    },\n  },\n  consumeTypeIds: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      required: false,\n      type: {\n        selectItems: ConsumeType.getList,\n        multiple: true,\n      },\n    },\n  },\n  freeInConsumeTypeIds: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      required: false,\n      type: {\n        selectItems: ConsumeType.getList,\n        multiple: true,\n      },\n    },\n  },\n  color: {\n    type: IKDataEntity.Types.Color,\n    formConfig: {\n      required: false,\n    },\n  },\n  printOrder: {\n    type: IKDataEntity.Types.Integer,\n    required: false,\n    formConfig: {\n      default: 50,\n      requiredNew: false,\n      requiredEdit: false,\n      rule: [ // ^-[1-9]\\d*$\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die ganze Zahl ein',\n      ],\n    },\n  },\n  parentId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      required: false,\n      type: {\n        selectItems: ParentCategoty.getList,\n        itemText: '_langsname',\n      },\n    },\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { hillo, IKDataEntity } from 'innerken-utils'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  name: {\n    displayName: 'sectionName',\n  },\n  isSingleLinePrint: {\n    type: IKDataEntity.Types.Boolean,\n    displayName: 'isSingleLinePrint',\n  },\n  isSingleOrderPrint: {\n    type: IKDataEntity.Types.Boolean,\n    displayName: 'isSingleOrderPrint',\n  },\n  printerCount: {\n    displayName: 'printerCount',\n    formConfig: {\n      inEdit: false,\n      inNew: false,\n    },\n  },\n  defaultRetryCount: {\n    formConfig: {\n      default: '0',\n    },\n  },\n  totalDishesCount: {\n    formConfig: {\n      inEdit: false,\n      inNew: false,\n    },\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Printer.php', {\n      op: 'showPrinterGroups',\n      ...filter,\n    }))\n      .content\n  },\n  add: function (item) {\n    return hillo.postWithUploadFile('Printer.php?op=addPrinterGroups', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Printer.php?op=updatePrinterGroups', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Printer.php?op=deletePrinterGroup', { id: id })\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { hillo, IKDataEntity } from 'innerken-utils'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  name: {\n    displayName: 'allergName',\n  },\n  icon: {\n    displayName: 'icon',\n  },\n  shortName: {\n    displayName: 'shortName',\n  },\n  displayText: {\n    displayName: 'displayText',\n  },\n}\nconst config = {\n  add: function (item) {\n    return hillo.postWithUploadFile('Dishes.php?op=addAllergen', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Dishes.php?op=updateAllergen', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Dishes.php?op=deleteAllergen', { id: id })\n  },\n  load: async function (filter) {\n    return (await hillo.get('Dishes.php', {\n      op: 'showAllAllergen',\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","// import GlobalSettings from '../components/Settings/GlobalSettings'\nimport { hillo, IKDataEntity } from 'innerken-utils'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {\n    displayName: 'staffName',\n  },\n  printName: {\n    displayName: 'printTitle',\n  },\n  zbonGroup: {\n    displayName: 'zbonGroup',\n  },\n  color: {\n    type: IKDataEntity.Types.Color,\n    formConfig: {\n      required: false,\n    },\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Complex.php', {\n      op: 'showAllConsumeTypeInfo',\n      // lang: GlobalSettings.lang(),\n      ...filter,\n    }))\n      .content\n  },\n  add: function (item) {\n    return hillo.post('ConsumeType.php?op=add', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('ConsumeType.php?op=update', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('ConsumeType.php?op=delete', { id: id })\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { IKDataEntity } from 'innerken-utils'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {\n    displayName: 'Name',\n  },\n  lang: {},\n  desc: {\n    displayName: 'Beschreibung',\n    formConfig: {\n      required: false,\n    },\n  },\n}\nexport default IKDataEntity.ModelFactory(entity, {})\n","import GlobalSettings from '../components/Settings/GlobalSettings'\n\nimport { hillo, IKDataEntity } from 'innerken-utils'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  name: {},\n  printTitle: {},\n  required: {\n    type: IKDataEntity.Types.Boolean,\n  },\n  multiSelect: {\n    type: IKDataEntity.Types.Boolean,\n  },\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('Category.php', {\n      op: 'showAttributeGroup',\n      lang: GlobalSettings.lang(),\n      ...filter,\n    }))\n      .content\n  },\n  add: function (item) {\n    return hillo.postWithUploadFile('Category.php?op=addAttributeGroup', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Category.php?op=updateAttributeGroup', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Category.php?op=deleteAttributeGroup', { id: id })\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","import { hillo, IKDataEntity } from 'innerken-utils'\nimport GlobalSettings from '../components/Settings/GlobalSettings'\nimport store from '../store'\nimport Category from './Category'\nimport PrinterGroup from './PrinterGroup'\nimport Allergen from './Allergen'\nimport StringEntity from './StringEntity'\nimport AttributeGroup from './AttributeGroup'\n\nconst i = Boolean(GlobalSettings.isShowOnTable === '0')\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    form: false,\n  },\n  code: {},\n  image: {\n    type: IKDataEntity.Types.Image,\n    formConfig: {\n      type: {\n        root: () => store.getters.rootUrl + GlobalSettings.dishImageRoot,\n      },\n      required: false,\n    },\n    displayName: 'image',\n    header: i,\n  },\n  dishName: {\n    displayName: 'name',\n    form: false,\n  },\n  price: {\n    type: IKDataEntity.Types.Float,\n    formConfig: {\n      default: '',\n      overwriteRule: true,\n      rule: [\n        v => /^[0-9]+\\.{0,1}[0-9]{0,2}$/.test(v) || 'Bitte geben Sie den richtigen Preis ein',\n      ],\n    },\n  },\n  langs: {\n    displayName: 'name',\n    type: IKDataEntity.Types.Group,\n    formConfig: {\n      groupName: 'name',\n      default: GlobalSettings.supportLang,\n      childLabelKey: 'lang',\n      type: {},\n    },\n    tableConfig: {\n      displayCondition: (item) => {\n        return item.lang.toUpperCase() === GlobalSettings.lang()\n      },\n      displayChild: (key) => {\n        return key === 'name'\n      },\n    },\n    childKey: ['name', 'desc'],\n    labelKey: 'lang',\n    children: [\n      StringEntity, StringEntity, StringEntity,\n    ],\n    header: false,\n  },\n  printGroupId: {\n    displayName: 'printCatName',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      default: 1,\n      type: {\n        selectItems: PrinterGroup.getList,\n      },\n    },\n  },\n  categoryId: {\n    displayName: 'labelName',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Category.getList,\n        itemText: '_langsname',\n      },\n    },\n  },\n  AllergenId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Allergen.getList,\n        multiple: true,\n      },\n      required: false,\n    },\n    displayName: '过敏源',\n  },\n  attributeGroupId: {\n    displayName: 'attributeGroupNames',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      merge: false,\n      required: false,\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n        disabledItem: (item, editedItem) => {\n          if (editedItem.inheritAttributeGroupId) {\n            return ({\n              ...item,\n              disabled: editedItem.inheritAttributeGroupId.includes(item.id),\n            })\n          } else {\n            return item\n          }\n        },\n      },\n    },\n  },\n  localAttributeGroupId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n      },\n      inNew: false,\n      inEdit: false,\n    },\n    header: false,\n  },\n  inheritAttributeGroupId: {\n    displayName: 'AttributeGroupName',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: AttributeGroup.getList,\n        multiple: true,\n      },\n      inNew: false,\n      inEdit: false,\n    },\n    header: false,\n  },\n  dishWeight: {\n    displayName: 'DishWeight',\n    type: IKDataEntity.Types.Integer,\n    formConfig: {\n      default: 1,\n      required: false,\n      rule: [ // ^-[1-9]\\d*$\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die ganze Zahl ein',\n      ],\n    },\n  },\n  isActive: {\n    type: IKDataEntity.Types.Boolean,\n    displayName: 'isActive',\n    formConfig: {\n      default: 1,\n      required: false,\n    },\n  },\n  dishAlias: {\n    required: false,\n    formConfig: {\n      requiredNew: false,\n      requiredEdit: false,\n    },\n  },\n  printText: {\n    displayName: 'printTitle',\n    required: false,\n    formConfig: {\n      requiredNew: false,\n      requiredEdit: false,\n    },\n  },\n}\nconst config = {\n  add: function (item) {\n    item.attributeGroup = item.attributeGroupId\n      .filter(i => !item.inheritAttributeGroupId.includes(i)).join(',')\n    item.allergenGroup = item.AllergenId.join(',')\n    return hillo.postWithUploadFile('Dishes.php?op=add', {\n      ...item,\n      params: JSON.stringify(item),\n    }, { showLoading: true })\n  },\n  edit: function (item) {\n    item.attributeGroup = item.attributeGroupId\n      .filter(i => !item.inheritAttributeGroupId.includes(i)).join(',')\n    item.allergenGroup = item.AllergenId.join(',')\n    if (item.file) {\n      item.imageExt = item.file.name.split('.')[1]\n    }\n    return hillo.postWithUploadFile('Dishes.php?op=update', {\n      ...item,\n      params: JSON.stringify(item),\n    }, { showLoading: true })\n  },\n  remove: function (id) {\n    return hillo.post('Dishes.php?op=delete', { id: id })\n  },\n  load: async function (filter) {\n    return (await hillo.get('Dishes.php', {\n      lang: GlobalSettings.lang(),\n      ...filter,\n    }))\n      .content.map(function (item) {\n        item.id = item.dishId\n        item.attributeGroupId = [\n          item.inheritAttributeGroupId ? item.inheritAttributeGroupId.split(',') : [],\n          item.localAttributeGroupId ? item.localAttributeGroupId.split(',') : [],\n        ].flat().join(',')\n        item.langs = item.langs.map(i => {\n          return {\n            ...i,\n            desc: i.description,\n          }\n        })\n        return item\n      })\n  },\n}\nconst DishModel = IKDataEntity.ModelFactory(entity, config)\nDishModel.getBuffet = async function () {\n   return (await DishModel.getList()).filter(i => i.dishesCategoryTypeId === '8')\n}\nexport default DishModel\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"fill-height align-start\",attrs:{\"id\":\"data-tables\",\"fluid\":\"\",\"tag\":\"section\"}},[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('ik-data-table',{attrs:{\"model\":_vm.ConsumeType,\"entity-name\":_vm.$t('ConsumeTypeSetting'),\"icon\":\"mdi-view-grid-plus\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('ik-data-table',{attrs:{\"model\":_vm.BuffetChild,\"entity-name\":_vm.$t('自助类型设置'),\"icon\":\"mdi-account-child\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('ik-data-table',{attrs:{\"model\":_vm.BuffetSetting,\"entity-name\":_vm.$t('BuffetChildSetting'),\"icon\":\"mdi-cogs\"}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { hillo, IKDataEntity } from 'innerken-utils'\nimport Dish from './Dish'\nimport ConsumeType from './ConsumeType'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      disableNew: true,\n      disableEdit: true,\n    },\n  },\n  childDishId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Dish.getBuffet,\n        itemText: '_langsname',\n      },\n    },\n  },\n  adultDishId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: Dish.getBuffet,\n        itemText: '_langsname',\n      },\n    },\n  },\n  consumeTypeId: {\n    displayName: 'ConsumeTypeSetting',\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: ConsumeType.getList,\n      },\n    },\n  },\n}\nconst config = {\n  add: function (item) {\n    return hillo.postWithUploadFile('Dishes.php?op=addJBuffetChild', item, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('Dishes.php?op=editJBuffetChild', item, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('Dishes.php?op=deleteJBuffetChild', { id: id })\n  },\n  load: async function (filter) {\n    return (await hillo.get('Dishes.php?op=showJBuffetChild', {\n      ...filter,\n    })).content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","\nimport { hillo, IKDataEntity } from 'innerken-utils'\nimport ConsumeType from './ConsumeType'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n\n  consumeTypeId: {\n    type: IKDataEntity.Types.Option,\n    formConfig: {\n      type: {\n        selectItems: ConsumeType.getList,\n      },\n    },\n  },\n  totalRound: {\n    formConfig: {\n      default: '',\n      rule: [\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die richtige Zahl ein',\n      ],\n    },\n  },\n  roundTime: {\n    formConfig: {\n      default: '',\n      rule: [\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die richtige Zahl ein',\n      ],\n    },\n  },\n  maxDineTime: {\n    formConfig: {\n      default: '',\n      rule: [\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die richtige Zahl ein',\n      ],\n    },\n  },\n  roundDishCount: {\n    formConfig: {\n      default: '',\n      rule: [\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die richtige Zahl ein',\n      ],\n    },\n  },\n  childRoundDishCount: {\n    formConfig: {\n      default: '',\n      rule: [\n        v => /^[0-9]\\d*$/.test(v) || 'Bitte geben Sie die richtige Zahl ein',\n      ],\n    },\n  },\n}\n\nconst config = {\n  add: function (item) {\n    return hillo.post('ConsumeType.php?op=addJpBuffetSetting', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  edit: function (item) {\n    return hillo.postWithUploadFile('ConsumeType.php?op=updateJpBuffetSetting', {\n      ...item,\n      langs: JSON.stringify(item.langs),\n    }, {\n      showLoading: true,\n    })\n  },\n  remove: function (id) {\n    return hillo.post('ConsumeType.php?op=deleteJpBuffetSetting', { id: id })\n  },\n\n  load: async function (filter) {\n    return (await hillo.get('ConsumeType.php?op=showAllBuffetSetting', {\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n","<template>\n  <v-container\n    id=\"data-tables\"\n    class=\"fill-height align-start\"\n    fluid\n    tag=\"section\"\n  >\n    <v-container\n      fluid\n    >\n      <v-row>\n        <v-col\n          cols=\"12\"\n        >\n          <ik-data-table\n            :model=\"ConsumeType\"\n            :entity-name=\"$t('ConsumeTypeSetting')\"\n            icon=\"mdi-view-grid-plus\"\n          />\n        </v-col>\n        <v-col\n          cols=\"12\"\n        >\n          <ik-data-table\n            :model=\"BuffetChild\"\n            :entity-name=\"$t('自助类型设置')\"\n            icon=\"mdi-account-child\"\n          />\n        </v-col>\n        <v-col\n          cols=\"12\"\n        >\n          <ik-data-table\n            :model=\"BuffetSetting\"\n            :entity-name=\"$t('BuffetChildSetting')\"\n            icon=\"mdi-cogs\"\n          />\n        </v-col>\n      </v-row>\n\n    </v-container>\n  </v-container>\n</template>\n\n<script>\n  import { IkDataTable } from 'innerken-utils'\n  import BuffetChild from '../../model/BuffetChild'\n  import BuffetSetting from '../../model/BuffetSetting'\n  import ConsumeType from '../../model/ConsumeType'\n\n  export default {\n    components: {\n      IkDataTable,\n    },\n    data: function () {\n      return ({\n        BuffetChild: BuffetChild,\n        BuffetSetting: BuffetSetting,\n        ConsumeType: ConsumeType,\n      })\n    },\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BuffetChildSetting.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BuffetChildSetting.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BuffetChildSetting.vue?vue&type=template&id=06e0ef90&\"\nimport script from \"./BuffetChildSetting.vue?vue&type=script&lang=js&\"\nexport * from \"./BuffetChildSetting.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCol,VContainer,VRow})\n","import GlobalSettings from '../components/Settings/GlobalSettings'\nimport { hillo, IKDataEntity } from 'innerken-utils'\n\nconst entity = {\n  id: {\n    type: IKDataEntity.Types.Integer,\n    displayName: 'id',\n    tableConfig: {\n      align: 'start',\n    },\n    formConfig: {\n      requiredNew: false,\n    },\n  },\n  name: {},\n  lang: {},\n}\nconst config = {\n  load: async function (filter) {\n    return (await hillo.get('CategoryType.php', {\n      lang: GlobalSettings.lang(),\n      ...filter,\n    }))\n      .content\n  },\n}\n\nexport default IKDataEntity.ModelFactory(entity, config)\n"],"sourceRoot":""}